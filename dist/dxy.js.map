{"version":3,"file":"dxy.js","sources":["../src/math/Vector3.ts","../src/Constants.ts","../src/modules/Attribute.ts","../src/math/Box3.ts","../src/math/Sphere.ts","../src/modules/Geometry.ts","../src/math/Color.ts","../src/math/Matrix3.ts","../src/math/Matrix4.ts","../src/materials/Material.ts","../src/materials/PhysicalMaterial.ts","../src/math/Quaternion.ts","../src/modules/TRSObject.ts","../src/objects/Mesh.ts","../src/textures/Texture.ts","../src/textures/ImageTexture.ts","../src/loaders/GLBLoader.ts","../src/lights/Light.ts","../src/lights/AmbientLight.ts","../src/math/Plane.ts","../src/math/Frustum.ts","../src/cameras/Camera.ts","../src/cameras/OrthographicCamera.ts","../src/materials/DepthMaterial.ts","../src/textures/DataTexture.ts","../src/lights/Shadow.ts","../src/lights/DirectionalLight.ts","../src/materials/ImageMaterial.ts","../src/materials/CubeMaterial.ts","../src/objects/Scene.ts","../src/math/Vector4.ts","../src/renderers/webgl/WebGLState.ts","../src/math/Vector2.ts","../src/renderers/webgl/WebGLUniform.ts","../src/textures/CubeTexture.ts","../src/renderers/webgl/WebGLAttribute.ts","../src/renderers/webgl/WebGLCache.ts","../src/renderers/WebGLRenderer.ts","../src/cameras/PerspectiveCamera.ts","../src/math/Spherical.ts","../src/controls/OrbitControls.ts","../src/loaders/ImageLoader.ts","../src/loaders/TextureLoader.ts","../src/Dxy.ts"],"sourcesContent":["import { Matrix3 } from \"./Matrix3\";\r\nimport { Matrix4 } from \"./Matrix4\";\r\n\r\nexport class Vector3 {\r\n\r\n    public constructor(\r\n\r\n        public x = 0,\r\n        public y = 0,\r\n        public z = 0,\r\n\r\n    ) { }\r\n\r\n    public set(x: number, y: number, z: number): Vector3 {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(v: Vector3): Vector3 {\r\n\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setScalar(scalar: number): Vector3 {\r\n\r\n        this.x = scalar;\r\n        this.y = scalar;\r\n        this.z = scalar;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setComponent(index: number | string, value: number): Vector3 {\r\n\r\n        switch (index) {\r\n\r\n            case 'x':\r\n            case 0:\r\n\r\n                this.x = value;\r\n                break;\r\n\r\n            case 'y':\r\n            case 1:\r\n\r\n                this.y = value;\r\n                break;\r\n\r\n            case 'z':\r\n            case 2:\r\n\r\n                this.z = value;\r\n                break;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setFromArray(array: number[], offset = 0): Vector3 {\r\n\r\n        this.x = array[offset];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public add(right: Vector3): Vector3 {\r\n\r\n        this.x += right.x;\r\n        this.y += right.y;\r\n        this.z += right.z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public sub(v: Vector3): Vector3 {\r\n\r\n        return this.subVectors(this, v);\r\n\r\n    }\r\n\r\n    public min(v: Vector3): Vector3 {\r\n\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        this.z = Math.min(this.z, v.z);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public max(v: Vector3): Vector3 {\r\n\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        this.z = Math.max(this.z, v.z);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public addVectors(l: Vector3, r: Vector3): Vector3 {\r\n\r\n        this.x = l.x + r.x;\r\n        this.y = l.y + r.y;\r\n        this.z = l.z + r.z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public subVectors(l: Vector3, r: Vector3): Vector3 {\r\n\r\n        this.x = l.x - r.x;\r\n        this.y = l.y - r.y;\r\n        this.z = l.z - r.z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public multiplyScalar(scalar: number): Vector3 {\r\n\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public applyMatrix3(m: Matrix3): Vector3 {\r\n\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n\r\n        const me = m.elements;\r\n\r\n        this.x = x * me[0] + y * me[3] + z * me[6];\r\n        this.y = x * me[1] + y * me[4] + z * me[7];\r\n        this.z = x * me[2] + y * me[5] + z * me[8];\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public applyMatrix4(m: Matrix4): Vector3 {\r\n\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const e = m.elements;\r\n\r\n        const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\r\n        this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n        this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n        this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public equals(v: Vector3): boolean {\r\n\r\n        return v.x === this.x && v.y === this.y && v.z === this.z;\r\n\r\n    }\r\n\r\n    public dot(v: Vector3): number {\r\n\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n    }\r\n\r\n    public crossVectors(l: Vector3, r: Vector3): Vector3 {\r\n\r\n        this.x = l.y * r.z - l.z * r.y;\r\n        this.y = l.z * r.x - l.x * r.z;\r\n        this.z = l.x * r.y - l.y * r.x;\r\n\r\n        return this;\r\n    }\r\n\r\n    public lengthSq(): number {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n    }\r\n\r\n    public length(): number {\r\n\r\n        return Math.sqrt(this.lengthSq());\r\n\r\n    }\r\n\r\n    public normalize(): Vector3 {\r\n\r\n        return this.multiplyScalar(1 / (this.length() || 1));\r\n\r\n    }\r\n\r\n    public distanceTo(v: Vector3): number {\r\n\r\n        return Math.sqrt(this.distanceToSq(v));\r\n\r\n    }\r\n\r\n    public distanceToSq(v: Vector3): number {\r\n\r\n        const dx = this.x - v.x;\r\n        const dy = this.y - v.y;\r\n        const dz = this.z - v.z;\r\n\r\n        return dx * dx + dy * dy + dz * dz;\r\n\r\n    }\r\n\r\n    public maxComponent(): number {\r\n\r\n        return Math.max(this.x, this.y, this.z);\r\n\r\n    }\r\n\r\n    public clone(): Vector3 {\r\n\r\n        return new Vector3().copy(this);\r\n\r\n    }\r\n\r\n\r\n}","export class Constants {\r\n\r\n    public static readonly CLEAR_MASK = 16384 | 256 | 1024; // COLOR | DEPTH | STENCIL\r\n\r\n    public static readonly VERTEX_SHADER = 35633;\r\n    public static readonly FRAGMENT_SHADER = 35632;\r\n\r\n    public static readonly BYTE = 5120;\r\n    public static readonly UNSIGNED_BYTE = 5121;\r\n    public static readonly SHORT = 5122;\r\n    public static readonly UNSIGNED_SHORT = 5123;\r\n    public static readonly INT = 5124\r\n    public static readonly UNSIGNED_INT = 5125;\r\n    public static readonly FLOAT = 5126;\r\n    public static readonly BOOL = 35670;\r\n\r\n    public static readonly FLOAT_VEC2 = 35664;\r\n    public static readonly INT_VEC2 = 35667;\r\n    public static readonly BOOL_VEC2 = 35671;\r\n    public static readonly FLOAT_VEC3 = 35665;\r\n    public static readonly INT_VEC3 = 35668;\r\n    public static readonly BOOL_VEC3 = 35672;\r\n    public static readonly FLOAT_VEC4 = 35666;\r\n    public static readonly INT_VEC4 = 35669;\r\n    public static readonly BOOL_VEC4 = 35673;\r\n    public static readonly FLOAT_MAT3 = 35675;\r\n    public static readonly FLOAT_MAT4 = 35676;\r\n\r\n    public static readonly SAMPLER_2D = 35678;\r\n\r\n    public static readonly POINTS = 0;\r\n    public static readonly LINES = 1;\r\n    public static readonly TRIANGLES = 4;\r\n\r\n    public static readonly TEXTURE_2D = 3553;\r\n\r\n    public static readonly ARRAY_BUFFER = 34962;\r\n    public static readonly ELEMENT_ARRAY_BUFFER = 34963;\r\n\r\n    public static readonly NEAREST = 9728; \t\t\t\t\t// 从最大的贴图中选择 1 个像素\r\n    public static readonly LINEAR = 9729; \t\t\t\t\t// 从最大的贴图中选择 4 个像素然后混合\r\n    public static readonly NEAREST_MIPMAP_NEAREST = 9984; \t// 选择最合适的贴图，然后从上面找到一个像素\r\n    public static readonly LINEAR_MIPMAP_NEAREST = 9985; \t// 选择最合适的贴图，然后取出 4 个像素进行混合\r\n    public static readonly NEAREST_MIPMAP_LINEAR = 9986; \t// 选择最合适的两个贴图，从每个上面选择 1 个像素然后混合\r\n    public static readonly LINEAR_MIPMAP_LINEAR = 9987; \t// 选择最合适的两个贴图，从每个上选择 4 个像素然后混合\r\n\r\n    public static readonly REPEAT = 10497;\r\n    public static readonly CLAMP_TO_EDGE = 33071;\r\n    public static readonly MIRRORED_REPEAT = 33648;\r\n\r\n}\r\n","import { Vector3 } from \"../math/Vector3\";\r\nimport { Constants } from \"../Constants\";\r\nimport { Box3 } from \"../math/Box3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly vector3 = new Vector3();\r\n\r\n    public static getGLType(constructor: Function): number {\r\n\r\n        if (constructor === Int8Array) {\r\n\r\n            return Constants.BYTE;\r\n\r\n        }\r\n\r\n        if (constructor === Uint8Array) {\r\n\r\n            return Constants.UNSIGNED_BYTE;\r\n\r\n        }\r\n\r\n        if (constructor === Int16Array) {\r\n\r\n            return Constants.SHORT;\r\n\r\n        }\r\n\r\n        if (constructor === Uint16Array) {\r\n\r\n            return Constants.UNSIGNED_SHORT;\r\n\r\n        }\r\n\r\n        if (constructor === Uint32Array) {\r\n\r\n            return Constants.UNSIGNED_INT;\r\n\r\n        }\r\n\r\n        if (constructor === Float32Array) {\r\n\r\n            return Constants.FLOAT;\r\n\r\n        }\r\n\r\n        return Constants.FLOAT;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    public readonly dataType: number;\r\n\r\n    public needsUpdate = false;\r\n\r\n    public constructor(\r\n\r\n        public array: TypedArray,\r\n        public itemSize: number,\r\n        public normalized = false,\r\n\r\n    ) {\r\n\r\n        this.dataType = Helper.getGLType(array.constructor);\r\n\r\n    }\r\n\r\n    public get count(): number {\r\n\r\n        return this.array.length / this.itemSize;\r\n\r\n    }\r\n\r\n    public getX(index: number): number {\r\n\r\n        return this.array[index * this.itemSize];\r\n\r\n    }\r\n\r\n    public getY(index: number): number {\r\n\r\n        return this.array[index * this.itemSize + 1];\r\n\r\n    }\r\n\r\n    public getZ(index: number): number {\r\n\r\n        return this.array[index * this.itemSize + 2];\r\n\r\n    }\r\n\r\n    public toVector3(index: number, target: Vector3): Vector3 {\r\n\r\n        target.x = this.getX(index);\r\n        target.y = this.getY(index);\r\n        target.z = this.getZ(index);\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public toBox3(target: Box3): Box3 {\r\n\r\n        target.makeEmpty();\r\n\r\n        for (let ii = 0, li = this.count; ii < li; ii++) {\r\n\r\n            this.toVector3(ii, Helper.vector3);\r\n            target.expandByPoint(Helper.vector3);\r\n\r\n        }\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public static createF3(array: TypedArray | number[]): Attribute {\r\n\r\n        return new Attribute(new Float32Array(array), 3, false);\r\n\r\n    }\r\n\r\n    public static createF2(array: TypedArray | number[]): Attribute {\r\n\r\n        return new Attribute(new Float32Array(array), 2, false);\r\n\r\n    }\r\n\r\n}\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nexport class Box3 {\r\n\r\n    public min = new Vector3(+Infinity, +Infinity, +Infinity);\r\n    public max = new Vector3(-Infinity, -Infinity, -Infinity);\r\n\r\n    public makeEmpty(): Box3 {\r\n\r\n        this.min.x = this.min.y = this.min.z = + Infinity;\r\n        this.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n\r\n        return (this.max.x < this.min.x) || (this.max.y < this.min.y) || (this.max.z < this.min.z);\r\n\r\n    }\r\n\r\n    public getCenter(target: Vector3): Vector3 {\r\n\r\n        return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n\r\n    }\r\n\r\n    public expandByPoint(point: Vector3): Box3 {\r\n\r\n        this.min.min(point);\r\n        this.max.max(point);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(box: Box3): Box3 {\r\n\r\n        this.min.copy(box.min);\r\n        this.max.copy(box.max);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}","import { Matrix4 } from \"./Matrix4\";\r\nimport { Vector3 } from \"./Vector3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly scale = new Vector3();\r\n\r\n}\r\n\r\nexport class Sphere {\r\n\r\n    public center = new Vector3(0, 0, 0);\r\n    public radius = -1;\r\n\r\n    public applyMatrix4(matrix: Matrix4): Sphere {\r\n\r\n        this.center.applyMatrix4(matrix);\r\n\r\n        matrix.extractScale(Helper.scale);\r\n\r\n        const maxScale = Helper.scale.maxComponent();\r\n        this.radius = this.radius * maxScale;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(sphere: Sphere): Sphere {\r\n\r\n        this.center.copy(sphere.center);\r\n        this.radius = sphere.radius;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}","import { Box3 } from \"../math/Box3\";\r\nimport { Sphere } from \"../math/Sphere\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Attribute } from \"./Attribute\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly vector3 = new Vector3();\r\n    public static readonly box3 = new Box3();\r\n\r\n    public static arrayNeedsUint32(array: number[]): boolean {\r\n\r\n        for (let ii = array.length - 1; ii >= 0; --ii) {\r\n\r\n            if (array[ii] >= 65535) {\r\n\r\n                return true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Geometry {\r\n\r\n    public readonly attributes: { [key: string]: Attribute; } = {};\r\n    public readonly groups: RenderGroup[] = [];\r\n    public readonly boundingSphere = new Sphere();\r\n\r\n    public indices: Attribute | undefined;\r\n\r\n    public get position(): Attribute | undefined {\r\n\r\n        return this.getAttribute('position');\r\n\r\n    }\r\n\r\n    public setIndices(array: number[]): void {\r\n\r\n        if (Helper.arrayNeedsUint32(array)) {\r\n\r\n            this.indices = new Attribute(new Uint32Array(array), 1);\r\n\r\n        } else {\r\n\r\n            this.indices = new Attribute(new Uint16Array(array), 1);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public setAttribute(name: string, attribute: Attribute): Geometry {\r\n\r\n        this.attributes[name] = attribute;\r\n        return this;\r\n\r\n    }\r\n\r\n    public getAttribute(name: string): Attribute | undefined {\r\n\r\n        return this.attributes[name];\r\n\r\n    }\r\n\r\n    public hasAttribute(name: string): boolean {\r\n\r\n        return name in this.attributes;\r\n\r\n    }\r\n\r\n    public addGroup(start: number, count: number, materialIndex: number): Geometry {\r\n\r\n        this.groups.push(\r\n\r\n            {\r\n\r\n                start: start,\r\n                count: count,\r\n                materialIndex: materialIndex\r\n\r\n            }\r\n\r\n        );\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public computeBoundingSphere(): void {\r\n\r\n        if (!this.position) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const center = this.boundingSphere.center;\r\n\r\n        this.position.toBox3(Helper.box3);\r\n        Helper.box3.getCenter(center);\r\n\r\n        let maxRadiusSq = -1;\r\n\r\n        for (let ii = 0, il = this.position.count; ii < il; ii++) {\r\n\r\n            this.position.toVector3(ii, Helper.vector3);\r\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSq(Helper.vector3));\r\n\r\n        }\r\n\r\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n\r\n    }\r\n\r\n}\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static fromStyle(style: string): number[] {\r\n\r\n        let execArray: RegExpExecArray | null;\r\n\r\n        if (execArray = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {\r\n\r\n            return Helper.fromRGB(execArray);\r\n\r\n        }\r\n\r\n        if (execArray = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\r\n\r\n            return Helper.fromHex(execArray);\r\n\r\n        }\r\n\r\n        return [0, 0, 0];\r\n\r\n    }\r\n\r\n    public static fromRGB(array: RegExpExecArray): number[] {\r\n\r\n        const name = array[1];\r\n        const result = [0, 0, 0];\r\n\r\n        if (name === 'rgb' || name === 'rgba') {\r\n\r\n            const components = array[2];\r\n            let color: RegExpExecArray | null;\r\n\r\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\r\n                // rgb(255, 0, 0) rgba(255, 0, 0, 0.5)\r\n\r\n                result[0] = Math.min(255, parseInt(color[1], 10)) / 255;\r\n                result[1] = Math.min(255, parseInt(color[2], 10)) / 255;\r\n                result[2] = Math.min(255, parseInt(color[3], 10)) / 255;\r\n\r\n            }\r\n\r\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\r\n\r\n                // rgb(100%, 0%, 0%) rgba(100%, 0%, 0%, 0.5)\r\n\r\n                result[0] = Math.min(100, parseInt(color[1], 10)) / 100;\r\n                result[1] = Math.min(100, parseInt(color[2], 10)) / 100;\r\n                result[2] = Math.min(100, parseInt(color[3], 10)) / 100;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    public static fromHex(array: RegExpExecArray): number[] {\r\n\r\n        const hex = array[1];\r\n        const size = hex.length;\r\n\r\n        const result = [0, 0, 0];\r\n\r\n        if (size === 3) {\r\n\r\n            // #ff0\r\n\r\n            result[0] = parseInt(hex.charAt(0), 16) / 15;\r\n            result[1] = parseInt(hex.charAt(1), 16) / 15;\r\n            result[2] = parseInt(hex.charAt(2), 16) / 15;\r\n\r\n        } else if (size === 6) {\r\n\r\n            // #ff0000\r\n\r\n            const h = parseInt(hex, 16);\r\n\r\n            result[0] = (h >> 16 & 255) / 255;\r\n            result[1] = (h >> 8 & 255) / 255;\r\n            result[2] = (h & 255) / 255;\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    public static SRGBToLinear(c: number): number {\r\n\r\n        return (c < 0.04045) ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Color {\r\n\r\n    public constructor(\r\n\r\n        public r = 1,\r\n        public g = 1,\r\n        public b = 1,\r\n\r\n    ) { }\r\n\r\n    public set(r: number, g: number, b: number): Color {\r\n\r\n        this.r = Helper.SRGBToLinear(r);\r\n        this.g = Helper.SRGBToLinear(g);\r\n        this.b = Helper.SRGBToLinear(b);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setStyle(style: string): Color {\r\n\r\n        const [r, g, b] = Helper.fromStyle(style);\r\n\r\n        this.set(r, g, b);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(color: Color): Color {\r\n\r\n        this.r = color.r;\r\n        this.g = color.g;\r\n        this.b = color.b;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setFromArray(array: number[], offset = 0): Color {\r\n\r\n        this.r = array[offset];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public multiplyScalar(scalar: number): Color {\r\n\r\n        this.r *= scalar;\r\n        this.g *= scalar;\r\n        this.b *= scalar;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public toVector3(target: Vector3): Vector3 {\r\n\r\n        target.x = this.r;\r\n        target.y = this.g;\r\n        target.z = this.b;\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public clone(): Color {\r\n\r\n        return new Color().copy(this);\r\n\r\n    }\r\n\r\n}","import { Matrix4 } from \"./Matrix4\";\r\n\r\nexport class Matrix3 {\r\n\r\n    public constructor(\r\n\r\n        public readonly elements = [\r\n\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1,\r\n\r\n        ]\r\n\r\n    ) { }\r\n\r\n    public set(\r\n\r\n        n11: number, n12: number, n13: number,\r\n        n21: number, n22: number, n23: number,\r\n        n31: number, n32: number, n33: number,\r\n\r\n    ): Matrix3 {\r\n\r\n        this.elements[0] = n11;\r\n        this.elements[1] = n12;\r\n        this.elements[2] = n13;\r\n\r\n        this.elements[3] = n21;\r\n        this.elements[4] = n22;\r\n        this.elements[5] = n23;\r\n\r\n        this.elements[6] = n31;\r\n        this.elements[7] = n32;\r\n        this.elements[8] = n33;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(m: Matrix3): Matrix3 {\r\n\r\n        this.elements.length = 0;\r\n        this.elements.push(...m.elements);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setFromMatrix4(m: Matrix4): Matrix3 {\r\n\r\n        this.elements[0] = m.elements[0];\r\n        this.elements[1] = m.elements[1];\r\n        this.elements[2] = m.elements[2];\r\n\r\n        this.elements[3] = m.elements[4];\r\n        this.elements[4] = m.elements[5];\r\n        this.elements[5] = m.elements[6];\r\n\r\n        this.elements[6] = m.elements[8];\r\n        this.elements[7] = m.elements[9];\r\n        this.elements[8] = m.elements[10];\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public invert(): Matrix3 {\r\n\r\n        /**\r\n         *\r\n         *      经典伴随矩阵求逆\r\n         *\r\n         *      先计算所有元素的余子式值\r\n         *      然后余子式值组成的矩阵再转置\r\n         *      再除以矩阵的行列式的值\r\n         *\r\n         *      注意：以扩展形式的矩阵行列式求值\r\n         *\r\n         */\r\n\r\n        const te = this.elements;\r\n\r\n        const n11 = te[0], n12 = te[1], n13 = te[2];\r\n        const n21 = te[3], n22 = te[4], n23 = te[5];\r\n        const n31 = te[6], n32 = te[7], n33 = te[8];\r\n\r\n        const t11 = n33 * n22 - n23 * n32;\r\n        const t12 = n23 * n31 - n33 * n21;\r\n        const t13 = n32 * n21 - n22 * n31;\r\n\r\n        const det = n11 * t11 + n12 * t12 + n13 * t13;\r\n\r\n        if (det === 0) {\r\n\r\n            return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n        }\r\n\r\n        const detInv = 1 / det;\r\n\r\n        te[0] = t11 * detInv;\r\n        te[1] = (n13 * n32 - n33 * n12) * detInv;\r\n        te[2] = (n23 * n12 - n13 * n22) * detInv;\r\n\r\n        te[3] = t12 * detInv;\r\n        te[4] = (n33 * n11 - n13 * n31) * detInv;\r\n        te[5] = (n13 * n21 - n23 * n11) * detInv;\r\n\r\n        te[6] = t13 * detInv;\r\n        te[7] = (n12 * n31 - n32 * n11) * detInv;\r\n        te[8] = (n22 * n11 - n12 * n21) * detInv;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public transpose(): Matrix3 {\r\n\r\n        /**\r\n         * \r\n         *      0  1  2        0  3  6\r\n         *      3  4  5   ->   1  4  7\r\n         *      6  7  8        2  5  8\r\n         * \r\n         */\r\n\r\n        this.set(\r\n\r\n            this.elements[0], this.elements[3], this.elements[6],\r\n            this.elements[1], this.elements[4], this.elements[7],\r\n            this.elements[2], this.elements[5], this.elements[8],\r\n\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    public makeNormalMatrix(matrix4: Matrix4): Matrix3 {\r\n\r\n        return this.setFromMatrix4(matrix4).invert().transpose();\r\n\r\n    }\r\n\r\n    public equals(m: Matrix3): boolean {\r\n\r\n        const te = this.elements;\r\n        const me = m.elements;\r\n\r\n        for (let ii = 0; ii < 9; ii++) {\r\n\r\n            if (te[ii] !== me[ii]) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}","import { Quaternion } from \"./Quaternion\";\r\nimport { Vector3 } from \"./Vector3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly up = new Vector3(0, 1, 0);\r\n    public static readonly scale = new Vector3();\r\n    public static readonly xAxis = new Vector3();\r\n    public static readonly yAxis = new Vector3();\r\n    public static readonly zAxis = new Vector3();\r\n\r\n}\r\n\r\nexport class Matrix4 {\r\n\r\n    public constructor(\r\n\r\n        public readonly elements = [\r\n\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n\r\n        ]\r\n\r\n    ) { }\r\n\r\n    public set(\r\n\r\n        n11: number, n12: number, n13: number, n14: number,\r\n        n21: number, n22: number, n23: number, n24: number,\r\n        n31: number, n32: number, n33: number, n34: number,\r\n        n41: number, n42: number, n43: number, n44: number,\r\n\r\n    ): Matrix4 {\r\n\r\n        this.elements[0] = n11;\r\n        this.elements[1] = n12;\r\n        this.elements[2] = n13;\r\n        this.elements[3] = n14;\r\n\r\n        this.elements[4] = n21;\r\n        this.elements[5] = n22;\r\n        this.elements[6] = n23;\r\n        this.elements[7] = n24;\r\n\r\n        this.elements[8] = n31;\r\n        this.elements[9] = n32;\r\n        this.elements[10] = n33;\r\n        this.elements[11] = n34;\r\n\r\n        this.elements[12] = n41; //tx\r\n        this.elements[13] = n42; //ty\r\n        this.elements[14] = n43; //tz\r\n        this.elements[15] = n44;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(m: Matrix4): Matrix4 {\r\n\r\n        this.elements.length = 0;\r\n        this.elements.push(...m.elements);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public multiply(right: Matrix4): Matrix4 {\r\n\r\n        return this.multiplyMatrices(this, right);\r\n\r\n    }\r\n\r\n    public multiplyMatrices(left: Matrix4, right: Matrix4): Matrix4 {\r\n\r\n        /** \r\n         * \r\n         *      this = left * right\r\n         *      left 在左 , right 在右 \r\n         * \r\n         */\r\n\r\n        const le = left.elements.slice();\r\n        const re = right.elements.slice();\r\n\r\n        this.elements[0] = le[0] * re[0] + le[1] * re[4] + le[2] * re[8] + le[3] * re[12];\r\n        this.elements[1] = le[0] * re[1] + le[1] * re[5] + le[2] * re[9] + le[3] * re[13];\r\n        this.elements[2] = le[0] * re[2] + le[1] * re[6] + le[2] * re[10] + le[3] * re[14];\r\n        this.elements[3] = le[0] * re[3] + le[1] * re[7] + le[2] * re[11] + le[3] * re[15];\r\n\r\n        this.elements[4] = le[4] * re[0] + le[5] * re[4] + le[6] * re[8] + le[7] * re[12];\r\n        this.elements[5] = le[4] * re[1] + le[5] * re[5] + le[6] * re[9] + le[7] * re[13];\r\n        this.elements[6] = le[4] * re[2] + le[5] * re[6] + le[6] * re[10] + le[7] * re[14];\r\n        this.elements[7] = le[4] * re[3] + le[5] * re[7] + le[6] * re[11] + le[7] * re[15];\r\n\r\n        this.elements[8] = le[8] * re[0] + le[9] * re[4] + le[10] * re[8] + le[11] * re[12];\r\n        this.elements[9] = le[8] * re[1] + le[9] * re[5] + le[10] * re[9] + le[11] * re[13];\r\n        this.elements[10] = le[8] * re[2] + le[9] * re[6] + le[10] * re[10] + le[11] * re[14];\r\n        this.elements[11] = le[8] * re[3] + le[9] * re[7] + le[10] * re[11] + le[11] * re[15];\r\n\r\n        this.elements[12] = le[12] * re[0] + le[13] * re[4] + le[14] * re[8] + le[15] * re[12];\r\n        this.elements[13] = le[12] * re[1] + le[13] * re[5] + le[14] * re[9] + le[15] * re[13];\r\n        this.elements[14] = le[12] * re[2] + le[13] * re[6] + le[14] * re[10] + le[15] * re[14];\r\n        this.elements[15] = le[12] * re[3] + le[13] * re[7] + le[14] * re[11] + le[15] * re[15];\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public compose(position: Vector3, rotation: Quaternion, scale: Vector3): Matrix4 {\r\n\r\n        /** \r\n         * \r\n         *      在四元数旋转矩阵的基础上\r\n         *      再叠加缩放值到对应元素中\r\n         *      再设置平移值到对应元素中\r\n         * \r\n         */\r\n\r\n        const te = this.elements;\r\n\r\n        const x = rotation.x;\r\n        const y = rotation.y;\r\n        const z = rotation.z;\r\n        const w = rotation.w;\r\n\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        const sx = scale.x;\r\n        const sy = scale.y;\r\n        const sz = scale.z;\r\n\r\n        te[0] = (1 - (yy + zz)) * sx;\r\n        te[1] = (xy + wz) * sx;\r\n        te[2] = (xz - wy) * sx;\r\n        te[3] = 0;\r\n\r\n        te[4] = (xy - wz) * sy;\r\n        te[5] = (1 - (xx + zz)) * sy;\r\n        te[6] = (yz + wx) * sy;\r\n        te[7] = 0;\r\n\r\n        te[8] = (xz + wy) * sz;\r\n        te[9] = (yz - wx) * sz;\r\n        te[10] = (1 - (xx + yy)) * sz;\r\n        te[11] = 0;\r\n\r\n        te[12] = position.x;\r\n        te[13] = position.y;\r\n        te[14] = position.z;\r\n        te[15] = 1;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public invert(): Matrix4 {\r\n\r\n        /**\r\n         *\r\n         *      经典伴随矩阵求逆\r\n         *\r\n         *      先计算所有元素的余子式值\r\n         *      然后余子式值组成的矩阵再转置\r\n         *      再除以矩阵的行列式的值\r\n         *\r\n         *      注意：以扩展形式的矩阵行列式求值\r\n         *\r\n         */\r\n\r\n        const te = this.elements;\r\n\r\n        const n11 = te[0], n12 = te[1], n13 = te[2], n14 = te[3];\r\n        const n21 = te[4], n22 = te[5], n23 = te[6], n24 = te[7];\r\n        const n31 = te[8], n32 = te[9], n33 = te[10], n34 = te[11];\r\n        const n41 = te[12], n42 = te[13], n43 = te[14], n44 = te[15];\r\n\r\n        const t11 = n32 * n43 * n24 - n42 * n33 * n24 + n42 * n23 * n34 - n22 * n43 * n34 - n32 * n23 * n44 + n22 * n33 * n44;\r\n        const t12 = n41 * n33 * n24 - n31 * n43 * n24 - n41 * n23 * n34 + n21 * n43 * n34 + n31 * n23 * n44 - n21 * n33 * n44;\r\n        const t13 = n31 * n42 * n24 - n41 * n32 * n24 + n41 * n22 * n34 - n21 * n42 * n34 - n31 * n22 * n44 + n21 * n32 * n44;\r\n        const t14 = n41 * n32 * n23 - n31 * n42 * n23 - n41 * n22 * n33 + n21 * n42 * n33 + n31 * n22 * n43 - n21 * n32 * n43;\r\n\r\n        const det = n11 * t11 + n12 * t12 + n13 * t13 + n14 * t14;\r\n\r\n        if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n        const detInv = 1 / det;\r\n\r\n        te[0] = t11 * detInv;\r\n        te[1] = (n42 * n33 * n14 - n32 * n43 * n14 - n42 * n13 * n34 + n12 * n43 * n34 + n32 * n13 * n44 - n12 * n33 * n44) * detInv;\r\n        te[2] = (n22 * n43 * n14 - n42 * n23 * n14 + n42 * n13 * n24 - n12 * n43 * n24 - n22 * n13 * n44 + n12 * n23 * n44) * detInv;\r\n        te[3] = (n32 * n23 * n14 - n22 * n33 * n14 - n32 * n13 * n24 + n12 * n33 * n24 + n22 * n13 * n34 - n12 * n23 * n34) * detInv;\r\n\r\n        te[4] = t12 * detInv;\r\n        te[5] = (n31 * n43 * n14 - n41 * n33 * n14 + n41 * n13 * n34 - n11 * n43 * n34 - n31 * n13 * n44 + n11 * n33 * n44) * detInv;\r\n        te[6] = (n41 * n23 * n14 - n21 * n43 * n14 - n41 * n13 * n24 + n11 * n43 * n24 + n21 * n13 * n44 - n11 * n23 * n44) * detInv;\r\n        te[7] = (n21 * n33 * n14 - n31 * n23 * n14 + n31 * n13 * n24 - n11 * n33 * n24 - n21 * n13 * n34 + n11 * n23 * n34) * detInv;\r\n\r\n        te[8] = t13 * detInv;\r\n        te[9] = (n41 * n32 * n14 - n31 * n42 * n14 - n41 * n12 * n34 + n11 * n42 * n34 + n31 * n12 * n44 - n11 * n32 * n44) * detInv;\r\n        te[10] = (n21 * n42 * n14 - n41 * n22 * n14 + n41 * n12 * n24 - n11 * n42 * n24 - n21 * n12 * n44 + n11 * n22 * n44) * detInv;\r\n        te[11] = (n31 * n22 * n14 - n21 * n32 * n14 - n31 * n12 * n24 + n11 * n32 * n24 + n21 * n12 * n34 - n11 * n22 * n34) * detInv;\r\n\r\n        te[12] = t14 * detInv;\r\n        te[13] = (n31 * n42 * n13 - n41 * n32 * n13 + n41 * n12 * n33 - n11 * n42 * n33 - n31 * n12 * n43 + n11 * n32 * n43) * detInv;\r\n        te[14] = (n41 * n22 * n13 - n21 * n42 * n13 - n41 * n12 * n23 + n11 * n42 * n23 + n21 * n12 * n43 - n11 * n22 * n43) * detInv;\r\n        te[15] = (n21 * n32 * n13 - n31 * n22 * n13 + n31 * n12 * n23 - n11 * n32 * n23 - n21 * n12 * n33 + n11 * n22 * n33) * detInv;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public determinant(): number {\r\n\r\n        /** 以扩展形式的矩阵行列式求值 */\r\n\r\n        const te = this.elements;\r\n\r\n        const n11 = te[0], n21 = te[1], n31 = te[2], n41 = te[3];\r\n\r\n        const n12 = te[4], n22 = te[5], n32 = te[6], n42 = te[7];\r\n\r\n        const n13 = te[8], n23 = te[9], n33 = te[10], n43 = te[11];\r\n\r\n        const n14 = te[12], n24 = te[13], n34 = te[14], n44 = te[15];\r\n\r\n        return (\r\n\r\n            n41 * (\r\n\r\n                +n14 * n23 * n32 -\r\n                n13 * n24 * n32 -\r\n                n14 * n22 * n33 +\r\n                n12 * n24 * n33 +\r\n                n13 * n22 * n34 -\r\n                n12 * n23 * n34\r\n\r\n            )\r\n\r\n            +\r\n\r\n            n42 * (\r\n\r\n                +n11 * n23 * n34 -\r\n                n11 * n24 * n33 +\r\n                n14 * n21 * n33 -\r\n                n13 * n21 * n34 +\r\n                n13 * n24 * n31 -\r\n                n14 * n23 * n31\r\n\r\n            )\r\n\r\n            +\r\n\r\n            n43 * (\r\n\r\n                +n11 * n24 * n32 -\r\n                n11 * n22 * n34 -\r\n                n14 * n21 * n32 +\r\n                n12 * n21 * n34 +\r\n                n14 * n22 * n31 -\r\n                n12 * n24 * n31\r\n\r\n            )\r\n\r\n            +\r\n\r\n            n44 * (\r\n\r\n                -n13 * n22 * n31 -\r\n                n11 * n23 * n32 +\r\n                n11 * n22 * n33 +\r\n                n13 * n21 * n32 -\r\n                n12 * n21 * n33 +\r\n                n12 * n23 * n31\r\n\r\n            )\r\n\r\n        );\r\n\r\n    }\r\n\r\n    public extractPosition(target: Vector3): Vector3 {\r\n\r\n        target.x = this.elements[12];\r\n        target.y = this.elements[13];\r\n        target.z = this.elements[14];\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public extractRotation(target: Quaternion): Quaternion {\r\n\r\n        const me = this.elements.slice();\r\n\r\n        this.extractScale(Helper.scale);\r\n\r\n        me[0] /= Helper.scale.x;\r\n        me[1] /= Helper.scale.x;\r\n        me[2] /= Helper.scale.x;\r\n\r\n        me[4] /= Helper.scale.y;\r\n        me[5] /= Helper.scale.y;\r\n        me[6] /= Helper.scale.y;\r\n\r\n        me[8] /= Helper.scale.z;\r\n        me[9] /= Helper.scale.z;\r\n        me[10] /= Helper.scale.z;\r\n\r\n        const trace = me[0] + me[5] + me[10];\r\n\r\n        if (trace > 0) {\r\n\r\n            const s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            target.w = 0.25 / s;\r\n            target.x = (me[6] - me[9]) * s;\r\n            target.y = (me[8] - me[2]) * s;\r\n            target.z = (me[1] - me[4]) * s;\r\n\r\n        } else if (me[0] > me[5] && me[0] > me[10]) {\r\n\r\n            const s = 2.0 * Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n\r\n            target.w = (me[6] - me[9]) / s;\r\n            target.x = 0.25 * s;\r\n            target.y = (me[4] + me[1]) / s;\r\n            target.z = (me[8] + me[2]) / s;\r\n\r\n        } else if (me[5] > me[10]) {\r\n\r\n            const s = 2.0 * Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n\r\n            target.w = (me[8] - me[2]) / s;\r\n            target.x = (me[4] + me[1]) / s;\r\n            target.y = 0.25 * s;\r\n            target.z = (me[9] + me[6]) / s;\r\n\r\n        } else {\r\n\r\n            const s = 2.0 * Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n\r\n            target.w = (me[1] - me[4]) / s;\r\n            target.x = (me[8] + me[2]) / s;\r\n            target.y = (me[9] + me[6]) / s;\r\n            target.z = 0.25 * s;\r\n\r\n        }\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public extractScale(target: Vector3): Vector3 {\r\n\r\n        this.extractBasis(Helper.xAxis, Helper.yAxis, Helper.zAxis);\r\n\r\n        target.x = Helper.xAxis.length();\r\n        target.y = Helper.yAxis.length();\r\n        target.z = Helper.zAxis.length();\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public extractBasis(xAxis: Vector3, yAxis: Vector3, zAxis: Vector3): Matrix4 {\r\n\r\n        xAxis.setFromArray(this.elements, 0);\r\n        yAxis.setFromArray(this.elements, 4);\r\n        zAxis.setFromArray(this.elements, 8);\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public makePerspective(left: number, right: number, top: number, bottom: number, near: number, far: number): Matrix4 {\r\n\r\n        /**\r\n         * \r\n         *      计算透视投影矩阵\r\n         *\r\n         *      先将平头锥体计算为正方体\r\n         *      使用 near 范围的 left, right, top, bottom\r\n         *      计算线性到 far 范围内的 xy 平面上的缩放\r\n         * \r\n         *      再将正方体缩放到 -1 到 +1 范围内\r\n         * \r\n         */\r\n\r\n        const te = this.elements;\r\n\r\n        const x = (2 * near) / (right - left);\r\n        const y = (2 * near) / (top - bottom);\r\n\r\n        const a = (right + left) / (right - left);\r\n        const b = (top + bottom) / (top - bottom);\r\n        const c = -(far + near) / (far - near);\r\n        const d = (-2 * far * near) / (far - near);\r\n\r\n        te[0] = x, te[1] = 0, te[2] = 0, te[3] = 0;\r\n        te[4] = 0, te[5] = y, te[6] = 0, te[7] = 0;\r\n        te[8] = a, te[9] = b, te[10] = c, te[11] = -1;\r\n        te[12] = 0, te[13] = 0, te[14] = d, te[15] = 0;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public makeOrthographic(left: number, right: number, top: number, bottom: number, near: number, far: number): Matrix4 {\r\n\r\n        /** 将正方体缩放到 -1 到 +1 范围内 */\r\n\r\n        const te = this.elements;\r\n\r\n        const w = 1.0 / (right - left);\r\n        const h = 1.0 / (top - bottom);\r\n        const p = 1.0 / (far - near);\r\n\r\n        const x = (right + left) * w;\r\n        const y = (top + bottom) * h;\r\n\r\n        const z = (far + near) * p;\r\n        const zInv = - 2 * p;\r\n\r\n        te[0] = 2 * w; te[4] = 0; te[8] = 0; te[12] = - x;\r\n        te[1] = 0; te[5] = 2 * h; te[9] = 0; te[13] = - y;\r\n        te[2] = 0; te[6] = 0; te[10] = zInv; te[14] = - z;\r\n        te[3] = 0; te[7] = 0; te[11] = 0; te[15] = 1;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public makeLookAt(eye: Vector3, target: Vector3): Matrix4 {\r\n\r\n        /** 基轴组成旋转矩阵 */\r\n\r\n        Helper.zAxis.subVectors(eye, target);\r\n\r\n        if (!Helper.zAxis.length()) {\r\n\r\n            Helper.zAxis.z = 1;\r\n\r\n        }\r\n\r\n        Helper.zAxis.normalize();\r\n        Helper.xAxis.crossVectors(Helper.up, Helper.zAxis);\r\n\r\n        if (!Helper.xAxis.lengthSq()) {\r\n\r\n            Helper.zAxis.z += 0.0001;\r\n\r\n            Helper.zAxis.normalize();\r\n            Helper.xAxis.crossVectors(Helper.up, Helper.zAxis);\r\n\r\n        }\r\n\r\n        Helper.xAxis.normalize();\r\n        Helper.yAxis.crossVectors(Helper.zAxis, Helper.xAxis);\r\n\r\n        this.elements[0] = Helper.xAxis.x;\r\n        this.elements[1] = Helper.xAxis.y;\r\n        this.elements[2] = Helper.xAxis.z;\r\n\r\n        this.elements[4] = Helper.yAxis.x;\r\n        this.elements[5] = Helper.yAxis.y;\r\n        this.elements[6] = Helper.yAxis.z;\r\n\r\n        this.elements[8] = Helper.zAxis.x;\r\n        this.elements[9] = Helper.zAxis.y;\r\n        this.elements[10] = Helper.zAxis.z;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public equals(m: Matrix4): boolean {\r\n\r\n        const te = this.elements;\r\n        const me = m.elements;\r\n\r\n        for (let ii = 0; ii < 16; ii++) {\r\n\r\n            if (te[ii] !== me[ii]) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}","import { Mesh } from \"../objects/Mesh\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Scene } from \"../objects/Scene\";\r\n\r\nexport abstract class Material {\r\n\r\n    public readonly uniforms: { [key: string]: IUniform; } = {};\r\n\r\n    public name = '';\r\n\r\n    public transparent = false;\r\n    public backfaceCulling = true;\r\n\r\n    public vertexShader = '';\r\n    public fragmentShader = '';\r\n\r\n    public getUniform(name: string): IUniform | undefined {\r\n\r\n        return this.uniforms[name];\r\n\r\n    }\r\n\r\n    public onBeforRender(scene: Scene, mesh: Mesh, camera: Camera): void { }\r\n\r\n}","import vertexShader from '../renderers/shaders/PhysicalMaterial.vert';\r\nimport fragmentShader from '../renderers/shaders/PhysicalMaterial.frag';\r\nimport { Color } from \"../math/Color\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Texture } from \"../textures/Texture\";\r\nimport { Material } from \"./Material\";\r\nimport { Scene } from '../objects/Scene';\r\nimport { Mesh } from '../objects/Mesh';\r\nimport { Camera } from '../cameras/Camera';\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly matrix4 = new Matrix4();\r\n\r\n}\r\n\r\ntype DirectionalLight = {\r\n\r\n    color: Color;\r\n    direction: Vector3;\r\n\r\n}\r\n\r\ntype Uniforms = {\r\n\r\n    opacity: IUniform<number>;\r\n    color: IUniform<Color>;\r\n\r\n    map: IUniform<Texture | undefined>;\r\n    useMap: IUniform<boolean>;\r\n\r\n    roughness: IUniform<number>;\r\n    roughnessMap: IUniform<Texture | undefined>;\r\n    useRoughnessMap: IUniform<boolean>;\r\n\r\n    metalness: IUniform<number>;\r\n    metalnessMap: IUniform<Texture | undefined>;\r\n    useMetalnessMap: IUniform<boolean>;\r\n\r\n    modelMatrix: IUniform<Matrix4>;\r\n    viewMatrix: IUniform<Matrix4>;\r\n    normalMatrix: IUniform<Matrix3>;\r\n    projectionMatrix: IUniform<Matrix4>;\r\n\r\n    useUV: IUniform<boolean>;\r\n\r\n    ambientLightColor: IUniform<Color>;\r\n    directionalLight: IUniform<DirectionalLight>;\r\n\r\n    shadowMap: IUniform<Texture | undefined>;\r\n    shadowMatrix: IUniform<Matrix4>;\r\n\r\n}\r\n\r\nexport class PhysicalMaterial extends Material {\r\n\r\n    declare public uniforms: Uniforms;\r\n\r\n    public opacity = 1;\r\n    public color = new Color(1, 1, 1);\r\n\r\n    public map: Texture | undefined;\r\n\r\n    public roughness = 1;\r\n    public roughnessMap: Texture | undefined;\r\n\r\n    public metalness = 0;\r\n    public metalnessMap: Texture | undefined;\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShader = fragmentShader;\r\n\r\n        this.uniforms = {\r\n\r\n            color: { value: new Color(1, 1, 1) },\r\n            opacity: { value: this.opacity },\r\n\r\n            map: { value: this.map },\r\n            useMap: { value: !!this.map },\r\n\r\n            roughness: { value: this.roughness },\r\n            roughnessMap: { value: this.roughnessMap },\r\n            useRoughnessMap: { value: !!this.roughnessMap },\r\n\r\n            metalness: { value: this.metalness },\r\n            metalnessMap: { value: this.metalnessMap },\r\n            useMetalnessMap: { value: !!this.metalnessMap },\r\n\r\n            modelMatrix: { value: new Matrix4() },\r\n            viewMatrix: { value: new Matrix4() },\r\n            normalMatrix: { value: new Matrix3() },\r\n            projectionMatrix: { value: new Matrix4() },\r\n\r\n            useUV: { value: false },\r\n\r\n            ambientLightColor: { value: new Color() },\r\n\r\n            directionalLight: {\r\n\r\n                value: {\r\n\r\n                    color: new Color(),\r\n                    direction: new Vector3(),\r\n                }\r\n\r\n            },\r\n\r\n            shadowMap: { value: undefined },\r\n            shadowMatrix: { value: new Matrix4() },\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public override onBeforRender(scene: Scene, mesh: Mesh, camera: Camera): void {\r\n\r\n        this.uniforms.opacity.value = this.opacity;\r\n        this.uniforms.color.value.copy(this.color);\r\n\r\n        this.uniforms.map.value = this.map;\r\n        this.uniforms.useMap.value = !!this.map;\r\n\r\n        this.uniforms.roughness.value = this.roughness;\r\n        this.uniforms.roughnessMap.value = this.roughnessMap;\r\n        this.uniforms.useRoughnessMap.value = !!this.roughnessMap;\r\n\r\n        this.uniforms.metalness.value = this.metalness;\r\n        this.uniforms.metalnessMap.value = this.metalnessMap;\r\n        this.uniforms.useMetalnessMap.value = !!this.metalnessMap;\r\n\r\n        this.uniforms.modelMatrix.value.copy(mesh.worldMatrix);\r\n        this.uniforms.viewMatrix.value.copy(camera.viewMatrix);\r\n        this.uniforms.projectionMatrix.value.copy(camera.projectionMatrix);\r\n\r\n        Helper.matrix4.multiplyMatrices(mesh.worldMatrix, camera.viewMatrix);\r\n        this.uniforms.normalMatrix.value.makeNormalMatrix(Helper.matrix4);\r\n\r\n        this.uniforms.useUV.value = mesh.geometry.hasAttribute('uv');\r\n\r\n        this.uniforms.ambientLightColor.value.copy(scene.ambientLight.lightColor);\r\n\r\n        this.uniforms.directionalLight.value.color.copy(scene.directionalLight.lightColor);\r\n        this.uniforms.directionalLight.value.direction.copy(scene.directionalLight.lightDirection);\r\n\r\n        this.uniforms.shadowMap.value = scene.directionalLight.shadow.texture;\r\n        this.uniforms.shadowMatrix.value.copy(scene.directionalLight.shadow.matrix);\r\n\r\n\r\n    }\r\n\r\n}","abstract class Helper {\r\n\r\n    public static clamp(value: number, min: number, max: number): number {\r\n\r\n        return Math.max(min, Math.min(max, value));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Quaternion {\r\n\r\n    private _eulerX = 0;\r\n    private _eulerY = 0;\r\n    private _eulerZ = 0;\r\n\r\n    public constructor(\r\n\r\n        public x = 0,\r\n        public y = 0,\r\n        public z = 0,\r\n        public w = 1,\r\n\r\n    ) {\r\n\r\n        this.updateEuler();\r\n\r\n    }\r\n\r\n    public set eulerX(x: number) {\r\n\r\n        this._eulerX = x;\r\n        this.setFromEuler();\r\n\r\n    }\r\n\r\n    public set eulerY(y: number) {\r\n\r\n        this._eulerY = y;\r\n        this.setFromEuler();\r\n\r\n    }\r\n\r\n    public set eulerZ(z: number) {\r\n\r\n        this._eulerZ = z;\r\n        this.setFromEuler();\r\n\r\n    }\r\n\r\n    public get eulerX(): number {\r\n\r\n        return this._eulerX;\r\n\r\n    }\r\n\r\n    public get eulerY(): number {\r\n\r\n        return this._eulerY;\r\n\r\n    }\r\n\r\n    public get eulerZ(): number {\r\n\r\n        return this._eulerZ;\r\n\r\n    }\r\n\r\n    public setFromArray(array: number[], offset = 0): Quaternion {\r\n\r\n        this.x = array[offset];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n\r\n        this.updateEuler();\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setFromEuler(\r\n\r\n        x = this._eulerX,\r\n        y = this._eulerY,\r\n        z = this._eulerZ\r\n\r\n    ): Quaternion {\r\n\r\n        /**\r\n         * \r\n         *      三个四元数按照 xyz 顺序相乘\r\n         *\r\n         * \t\tqx = ( cos(x), [sin(x), 0, 0] )\r\n         * \t\tqy = ( cos(y), [0, sin(y), 0] )\r\n         * \t\tqz = ( cos(z), [0, 0, sin(z)] )\r\n         *\r\n         *      四元数相乘的规则：\r\n         * \r\n         * \t\ta = ( aw, av = [ax, ay, az] ) \r\n         * \t\tb = ( bw, bv = [bx, by, bz] )\r\n         * \r\n         * \t\ta * b = aw * bw - av · bv, aw * bv + bw * av + av X bv\r\n         *\r\n         */\r\n\r\n        this._eulerX = x;\r\n        this._eulerY = y;\r\n        this._eulerZ = z;\r\n\r\n        const c1 = Math.cos(x / 2);\r\n        const c2 = Math.cos(y / 2);\r\n        const c3 = Math.cos(z / 2);\r\n\r\n        const s1 = Math.sin(x / 2);\r\n        const s2 = Math.sin(y / 2);\r\n        const s3 = Math.sin(z / 2);\r\n\r\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public updateEuler(): Quaternion {\r\n\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n\r\n        const m11 = (1 - (yy + zz));\r\n        const m12 = (xy - wz);\r\n        const m13 = (xz + wy);\r\n        const m22 = (1 - (xx + zz));\r\n        const m23 = (yz - wx);\r\n        const m32 = (yz + wx);\r\n        const m33 = (1 - (xx + yy));\r\n\r\n        this._eulerY = Math.asin(Helper.clamp(m13, -1, 1));\r\n\r\n        if (Math.abs(m13) < 0.9999999) {\r\n\r\n            this._eulerX = Math.atan2(-m23, m33);\r\n            this._eulerZ = Math.atan2(-m12, m11);\r\n\r\n        } else {\r\n\r\n            this._eulerX = Math.atan2(m32, m22);\r\n            this._eulerZ = 0;\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}","import { Matrix4 } from \"../math/Matrix4\";\r\nimport { Quaternion } from \"../math/Quaternion\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\nexport class TRSObject {\r\n\r\n    public readonly position = new Vector3(0, 0, 0);\r\n    public readonly rotation = new Quaternion(0, 0, 0, 1);\r\n    public readonly scale = new Vector3(1, 1, 1);\r\n\r\n    public readonly matrix = new Matrix4();\r\n    public readonly worldMatrix = new Matrix4();\r\n\r\n    public parent: TRSObject | undefined;\r\n    public readonly children: TRSObject[] = [];\r\n\r\n    public name = '';\r\n    public visible = true;\r\n\r\n    public updateMatrix(): void {\r\n\r\n        this.matrix.compose(this.position, this.rotation, this.scale);\r\n        this.worldMatrix.copy(this.matrix);\r\n\r\n        if (this.parent) {\r\n\r\n            this.worldMatrix.multiply(this.parent.worldMatrix);\r\n\r\n        }\r\n\r\n        for (const child of this.children) {\r\n\r\n            child.updateMatrix();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public add(object: TRSObject): TRSObject {\r\n\r\n        if (object !== this) {\r\n\r\n            if (object.parent) {\r\n\r\n                object.parent.remove(object);\r\n\r\n            }\r\n\r\n            object.parent = this;\r\n            this.children.push(object);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public remove(object: TRSObject): TRSObject {\r\n\r\n        if (object !== this) {\r\n\r\n            const index = this.children.indexOf(object);\r\n\r\n            if (index !== -1) {\r\n\r\n                object.parent = undefined;\r\n                this.children.splice(index, 1);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}","import { Material } from \"../materials/Material\";\r\nimport { PhysicalMaterial } from \"../materials/PhysicalMaterial\";\r\nimport { Geometry } from \"../modules/Geometry\";\r\nimport { TRSObject } from \"../modules/TRSObject\";\r\n\r\nexport class Mesh extends TRSObject {\r\n\r\n    public constructor(\r\n\r\n        public geometry = new Geometry(),\r\n        public material: Material | Material[] = new PhysicalMaterial(),\r\n\r\n    ) {\r\n\r\n        super();\r\n\r\n    }\r\n\r\n}","import { Constants } from \"../Constants\";\r\n\r\nexport abstract class Texture {\r\n\r\n    public magFilter = Constants.LINEAR;\r\n    public minFilter = Constants.LINEAR_MIPMAP_LINEAR;\r\n    public wrapS = Constants.REPEAT;\r\n    public wrapT = Constants.REPEAT;\r\n\r\n    public needsUpdate = false;\r\n\r\n}\r\n","import { Texture } from \"./Texture\";\r\n\r\nexport class ImageTexture extends Texture {\r\n\r\n    public constructor(\r\n\r\n        public image?: TexImage\r\n\r\n    ) {\r\n\r\n        super();\r\n\r\n    }\r\n\r\n}","import { Material } from \"../materials/Material\";\r\nimport { Attribute } from \"../modules/Attribute\";\r\nimport { Geometry } from \"../modules/Geometry\";\r\nimport { Texture } from \"../textures/Texture\";\r\nimport { Mesh } from \"../objects/Mesh\";\r\nimport { TRSObject } from \"../modules/TRSObject\";\r\nimport { Constants } from \"../Constants\";\r\nimport { ImageTexture } from \"../textures/ImageTexture\";\r\nimport { PhysicalMaterial } from \"../materials/PhysicalMaterial\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly textDecoder = new TextDecoder();\r\n\r\n    public static readonly filters: Mapping = {\r\n\r\n        9728: Constants.NEAREST,\r\n        9729: Constants.LINEAR,\r\n        9984: Constants.NEAREST_MIPMAP_NEAREST,\r\n        9985: Constants.LINEAR_MIPMAP_NEAREST,\r\n        9986: Constants.NEAREST_MIPMAP_LINEAR,\r\n        9987: Constants.LINEAR_MIPMAP_LINEAR,\r\n\r\n    };\r\n\r\n    public static readonly wraps: Mapping = {\r\n\r\n        10497: Constants.REPEAT,\r\n        33071: Constants.CLAMP_TO_EDGE,\r\n        33648: Constants.MIRRORED_REPEAT,\r\n\r\n    };\r\n\r\n    public static readonly sizes: Mapping = {\r\n\r\n        'SCALAR': 1,\r\n        'VEC2': 2,\r\n        'VEC3': 3,\r\n        'VEC4': 4,\r\n        'MAT2': 2,\r\n        'MAT3': 9,\r\n        'MAT4': 16,\r\n\r\n    };\r\n\r\n    public static getGeometryKey(primitive: any = {}): string {\r\n\r\n        const geometryKey = [`indices:${primitive.indices};`]\r\n\r\n        for (const key in primitive.attributes) {\r\n\r\n            const index = primitive.attributes[key];\r\n\r\n            geometryKey.push(`${key}:${index};`);\r\n\r\n        }\r\n\r\n        geometryKey.push(`mode:${primitive.mode};`)\r\n\r\n        return geometryKey.join();\r\n\r\n    }\r\n\r\n    public static getAttributeName(name: string): string {\r\n\r\n        switch (name) {\r\n\r\n            case 'POSITION': return 'position';\r\n\r\n            case 'NORMAL': return 'normal';\r\n\r\n            case 'TANGENT': return 'tangent';\r\n\r\n            case 'TEXCOORD_0': return 'uv';\r\n\r\n            case 'TEXCOORD_1': return 'uv2';\r\n\r\n            case 'COLOR_0': return 'color';\r\n\r\n            case 'WEIGHTS_0': return 'skinWeight';\r\n\r\n            case 'JOINTS_0': return 'skinIndex';\r\n\r\n            default: return name.toLowerCase();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static createTypedArray(type: number, lenOrBuf: ArrayBuffer | number, offset?: number, length?: number): TypedArray {\r\n\r\n        let constructor: any;\r\n\r\n        switch (type) {\r\n\r\n            case 5120:\r\n\r\n                constructor = ArrayBuffer;\r\n                break;\r\n\r\n            case 5121:\r\n\r\n                constructor = Uint8Array;\r\n                break;\r\n\r\n            case 5122:\r\n\r\n                constructor = Int16Array;\r\n                break;\r\n\r\n            case 5123:\r\n\r\n                constructor = Uint16Array;\r\n                break;\r\n\r\n            case 5125:\r\n\r\n                constructor = Uint32Array;\r\n                break;\r\n\r\n            case 5126:\r\n            default:\r\n\r\n                constructor = Float32Array;\r\n\r\n        }\r\n\r\n        if (lenOrBuf instanceof ArrayBuffer) {\r\n\r\n            return new constructor(lenOrBuf, offset, length);\r\n\r\n        } else {\r\n\r\n            return new constructor(lenOrBuf);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static mergeGeometries(geometries: Geometry[]): Geometry {\r\n\r\n        const merge = new Geometry();\r\n\r\n        if (!geometries.length) {\r\n\r\n            return merge;\r\n\r\n        }\r\n\r\n        const usedNames = Object.keys(geometries[0].attributes);\r\n\r\n        if (!usedNames.length) {\r\n            return merge;\r\n        }\r\n\r\n        const usedIndices = geometries[0].indices !== undefined;\r\n        const allAttributes: Attribute[][] = [];\r\n\r\n        let startIndex = 0;\r\n\r\n        for (let ii = 0, li = geometries.length; ii < li; ii++) {\r\n\r\n            const geometry = geometries[ii];\r\n            const attributes: Attribute[] = [];\r\n\r\n            if (usedIndices) {\r\n\r\n                if (!geometry.indices) {\r\n\r\n                    console.warn(`DXY.GLBLoader : ${ii} 个几何体缺少索引数据 . `);\r\n                    continue;\r\n\r\n                }\r\n\r\n                attributes.push(geometry.indices);\r\n\r\n            }\r\n\r\n            let isBreak = false;\r\n\r\n            for (const name of usedNames) {\r\n\r\n                const attribute = geometry.getAttribute(name)\r\n\r\n                if (!attribute) {\r\n\r\n                    isBreak = true;\r\n                    break;\r\n\r\n                }\r\n\r\n                attributes.push(attribute);\r\n\r\n            }\r\n\r\n            if (isBreak) {\r\n\r\n                console.warn(`DXY.GLBLoader : 第 ${ii} 个几何体缺少属性 . `);\r\n                continue;\r\n\r\n            }\r\n\r\n            const count = attributes[0].count;\r\n\r\n            merge.addGroup(startIndex, count, allAttributes.length);\r\n            startIndex += count;\r\n\r\n            allAttributes.push(attributes);\r\n\r\n        }\r\n\r\n        if (usedIndices) {\r\n\r\n            const data: number[] = [];\r\n            let offset = 0;\r\n\r\n            for (const attributes of allAttributes) {\r\n\r\n                const indices = attributes.shift() as Attribute;\r\n\r\n                for (let ii = 0, li = indices.count; ii < li; ii++) {\r\n\r\n                    data.push(indices.getX(ii) + offset);\r\n\r\n                }\r\n\r\n                offset += attributes[0].count;\r\n\r\n            }\r\n\r\n            merge.setIndices(data);\r\n\r\n        }\r\n\r\n        while (usedNames.length > 0) {\r\n\r\n            const attributes = allAttributes.map(e => e.shift()) as Attribute[];\r\n            const name = usedNames.shift() as string;\r\n\r\n            const attribute = Helper.mergeAttributes(attributes);\r\n\r\n            if (attribute) {\r\n\r\n                merge.setAttribute(name, attribute);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return merge;\r\n\r\n    }\r\n\r\n    public static mergeAttributes(attributes: Attribute[]): Attribute | undefined {\r\n\r\n        if (attributes.length === 0) {\r\n\r\n            return undefined;\r\n\r\n        }\r\n\r\n        const dataType = attributes[0].dataType;\r\n        const itemSize = attributes[0].itemSize;\r\n        const normalized = attributes[0].normalized;\r\n\r\n        let arrayLen = 0;\r\n\r\n        for (let ii = 0, li = attributes.length; ii < li; ii++) {\r\n\r\n            const attribute = attributes[ii];\r\n\r\n            if (\r\n\r\n                attribute.dataType !== dataType ||\r\n                attribute.itemSize !== itemSize ||\r\n                attribute.normalized !== normalized\r\n\r\n            ) {\r\n\r\n                console.warn(`DXY.GLBLoader : 第 ${ii} 个缓冲属性类型错误 . `);\r\n                return undefined;\r\n\r\n            }\r\n\r\n            arrayLen += attribute.array.length;\r\n\r\n        }\r\n\r\n        const array = Helper.createTypedArray(dataType, arrayLen);\r\n        let offset = 0;\r\n\r\n        for (const attribute of attributes) {\r\n\r\n            array.set(attribute.array, offset);\r\n            offset += attribute.array.length;\r\n\r\n        }\r\n\r\n        return new Attribute(array, itemSize, normalized);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass GBLParser {\r\n\r\n    private objectDef: GLBObject;\r\n    private bufferData: ArrayBuffer | undefined;\r\n    private geometryCache = new Map<string, Geometry>();\r\n    private material: Material | undefined;\r\n\r\n    public constructor(\r\n\r\n        private url: string\r\n\r\n    ) {\r\n\r\n        this.objectDef = {} as GLBObject;\r\n\r\n    }\r\n\r\n    public async parse(): Promise<TRSObject | undefined> {\r\n\r\n        await this.requestData();\r\n\r\n        let scene: TRSObject | undefined;\r\n\r\n        if (this.objectDef.scenes) {\r\n\r\n            scene = await this.loadScene(this.objectDef.scene);\r\n\r\n        }\r\n\r\n        return scene;\r\n\r\n    }\r\n\r\n    private async requestData(): Promise<void> {\r\n\r\n        const response = await fetch(this.url);\r\n\r\n        const data = await response.arrayBuffer();\r\n        const dataView = new DataView(data);\r\n\r\n        // const magic = _textDecoder.decode(new Uint8Array(data, 0, 4)); // 'glTF'\r\n        // const version = dataView.getUint32(4, true); // 2\r\n\r\n        const length = dataView.getUint32(8, true);\r\n\r\n        let index = 12, chunkLength: number, chunkType: number;\r\n        let objectDef: string | undefined;\r\n        let bufferData: ArrayBuffer | undefined;\r\n\r\n        while (index < length) {\r\n\r\n            chunkLength = dataView.getUint32(index, true);\r\n            index += 4;\r\n\r\n            chunkType = dataView.getUint32(index, true);\r\n            index += 4;\r\n\r\n            // json\r\n            if (chunkType === 0x4E4F534A) {\r\n\r\n                const defData = new Uint8Array(data, index, chunkLength);\r\n                objectDef = Helper.textDecoder.decode(defData);\r\n\r\n            }\r\n\r\n            // bin\r\n            else if (chunkType === 0x004E4942) {\r\n\r\n                bufferData = data.slice(index, index + chunkLength);\r\n\r\n            }\r\n\r\n            index += chunkLength;\r\n\r\n        }\r\n\r\n        this.bufferData = bufferData;\r\n\r\n        if (objectDef) {\r\n\r\n            this.objectDef = JSON.parse(objectDef);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private async loadScene(index: number): Promise<TRSObject> {\r\n\r\n        const sceneDef = this.objectDef.scenes[index];\r\n\r\n        const scene = new TRSObject();\r\n        scene.name = sceneDef.name || '';\r\n\r\n        for (const nodeIndex of sceneDef.nodes) {\r\n\r\n            const node = await this.loadNode(nodeIndex);\r\n            scene.add(node);\r\n\r\n        }\r\n\r\n        return scene;\r\n\r\n    }\r\n\r\n    private async loadNode(index: number): Promise<TRSObject> {\r\n\r\n        const nodeDef = this.objectDef.nodes[index];\r\n\r\n        if (nodeDef.instance) {\r\n\r\n            return nodeDef.instance;\r\n\r\n        }\r\n\r\n        let node: TRSObject;\r\n\r\n        if (nodeDef.mesh !== undefined) {\r\n\r\n            node = await this.loadMesh(nodeDef.mesh);\r\n\r\n        } else {\r\n\r\n            node = new TRSObject();\r\n\r\n        }\r\n\r\n        node.name = nodeDef.name || '';\r\n\r\n        if (nodeDef.translation) {\r\n\r\n            node.position.setFromArray(nodeDef.translation as number[]);\r\n\r\n        }\r\n\r\n        if (nodeDef.rotation) {\r\n\r\n            node.rotation.setFromArray(nodeDef.rotation as number[]);\r\n\r\n        }\r\n\r\n        if (nodeDef.scale) {\r\n\r\n            node.scale.setFromArray(nodeDef.scale as number[]);\r\n\r\n        }\r\n\r\n        if (nodeDef.children) {\r\n\r\n            for (const childIndex of nodeDef.children) {\r\n\r\n                const child = await this.loadNode(childIndex);\r\n                node.add(child);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        nodeDef.instance = node;\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    private async loadMesh(index: number): Promise<Mesh> {\r\n\r\n        const meshDef = this.objectDef.meshes[index];\r\n\r\n        if (meshDef.instance) {\r\n\r\n            return meshDef.instance;\r\n\r\n        }\r\n\r\n        const primitives = meshDef.primitives;\r\n\r\n        const geometryKeys: string[] = [];\r\n        const geometries = this.loadGeometries(primitives, geometryKeys);\r\n\r\n        const materials = await this.loadMaterials(primitives);\r\n\r\n        let mesh: Mesh;\r\n\r\n        if (geometries.length === 1) {\r\n\r\n            mesh = new Mesh(geometries[0], materials[0]);\r\n\r\n        } else {\r\n\r\n            const key = geometryKeys.join('_');\r\n            let geometry = this.geometryCache.get(key);\r\n\r\n            if (!geometry) {\r\n\r\n                geometry = Helper.mergeGeometries(geometries);\r\n                geometry.computeBoundingSphere();\r\n\r\n                this.geometryCache.set(key, geometry);\r\n\r\n            }\r\n\r\n            mesh = new Mesh(geometry, materials);\r\n\r\n        }\r\n\r\n        meshDef.instance = mesh;\r\n\r\n        return mesh;\r\n\r\n    }\r\n\r\n    private loadGeometries(primitives: any[], keys: string[]): Geometry[] {\r\n\r\n        const geometries: Geometry[] = [];\r\n\r\n        let geometry: Geometry | undefined;\r\n\r\n        for (const primitive of primitives) {\r\n\r\n            const key = Helper.getGeometryKey(primitive);\r\n            geometry = this.geometryCache.get(key);\r\n\r\n            if (!geometry) {\r\n\r\n                geometry = new Geometry();\r\n\r\n                for (const key in primitive.attributes) {\r\n\r\n                    const attributeName = Helper.getAttributeName(key);\r\n\r\n                    if (geometry.hasAttribute(attributeName)) {\r\n\r\n                        continue;\r\n\r\n                    }\r\n\r\n                    const accessorIndex = primitive.attributes[key];\r\n                    const attribute = this.loadAttribute(accessorIndex);\r\n\r\n                    geometry.setAttribute(attributeName, attribute);\r\n\r\n                }\r\n\r\n                if (primitive.indices !== undefined) {\r\n\r\n                    const attribute = this.loadAttribute(primitive.indices);\r\n                    geometry.indices = attribute;\r\n\r\n                }\r\n\r\n                geometry.computeBoundingSphere();\r\n\r\n                this.geometryCache.set(key, geometry);\r\n\r\n            }\r\n\r\n            keys.push(key);\r\n            geometries.push(geometry);\r\n\r\n        }\r\n\r\n        return geometries;\r\n\r\n    }\r\n\r\n    private loadAttribute(index: number): Attribute {\r\n\r\n        const accessorDef = this.objectDef.accessors[index];\r\n\r\n        const itemSize = Helper.sizes[accessorDef.type] || 0;\r\n        const type = accessorDef.componentType;\r\n        const count = accessorDef.count;\r\n        const offset = accessorDef.byteOffset || 0;\r\n        const normalized = accessorDef.normalized === true;\r\n        const length = count * itemSize;\r\n\r\n        const buffer = this.loadBufferView(accessorDef.bufferView);\r\n        const typedArray = Helper.createTypedArray(type, buffer, offset, length);\r\n\r\n        return new Attribute(typedArray, itemSize, normalized);\r\n\r\n    }\r\n\r\n    private async loadMaterials(primitives: any[]): Promise<Material[]> {\r\n\r\n        const materials: Material[] = []\r\n\r\n        for (const primitive of primitives) {\r\n\r\n            if (primitive.material === undefined) {\r\n\r\n                if (!this.material) {\r\n\r\n                    this.material = new PhysicalMaterial();\r\n\r\n                }\r\n\r\n                materials.push(this.material);\r\n\r\n                continue;\r\n\r\n            }\r\n\r\n            const materialDef = this.objectDef.materials[primitive.material];\r\n\r\n            if (materialDef.instance) {\r\n\r\n                materials.push(materialDef.instance);\r\n                continue;\r\n\r\n            }\r\n\r\n            const material = new PhysicalMaterial();\r\n            materialDef.instance = material;\r\n\r\n            material.name = materialDef.name;\r\n\r\n            const pbr = materialDef.pbrMetallicRoughness;\r\n\r\n            if (Array.isArray(pbr.baseColorFactor)) {\r\n\r\n                material.color.setFromArray(pbr.baseColorFactor as number[]);\r\n                material.opacity = pbr.baseColorFactor[3];\r\n\r\n            }\r\n\r\n            if (pbr.baseColorTexture !== undefined) {\r\n\r\n                const texture = await this.loadTexture(pbr.baseColorTexture.index);\r\n                material.map = texture;\r\n\r\n            }\r\n\r\n            material.metalness = pbr.metallicFactor !== undefined ? pbr.metallicFactor : 1;\r\n            material.roughness = pbr.roughnessFactor !== undefined ? pbr.roughnessFactor : 1;\r\n\r\n            if (pbr.metallicRoughnessTexture !== undefined) {\r\n\r\n                const texture = await this.loadTexture(pbr.metallicRoughnessTexture.index);\r\n                material.metalnessMap = texture;\r\n                material.roughnessMap = texture;\r\n\r\n            }\r\n\r\n            if (materialDef.normalTexture !== undefined) {\r\n\r\n                // const texture = await this.loadTexture(materialDef.normalTexture.index);\r\n\r\n                // material.normalMap = texture;\r\n                // material.normalScale = new Vector2(1, 1);\r\n\r\n                // if (materialDef.normalTexture.scale !== undefined) {\r\n\r\n                //     material.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\r\n\r\n                // }\r\n\r\n            }\r\n\r\n            if (materialDef.occlusionTexture !== undefined) {\r\n\r\n                // aoMap\r\n\r\n            }\r\n\r\n            if (materialDef.emissiveFactor !== undefined) {\r\n\r\n                // emissive\r\n\r\n            }\r\n\r\n            if (materialDef.extensions !== undefined) {\r\n\r\n                // const key = 'KHR_materials_emissive_strength';\r\n\r\n                // if (materialDef.extensions[key] !== undefined) {\r\n\r\n                //     const emissiveStrength = materialDef.extensions[key].emissiveStrength;\r\n\r\n                //     if (emissiveStrength !== undefined) {\r\n\r\n                //         material.emissiveIntensity = emissiveStrength;\r\n\r\n                //     }\r\n\r\n                // }\r\n\r\n            }\r\n\r\n            if (materialDef.emissiveTexture !== undefined) {\r\n\r\n                // emissiveMap\r\n\r\n            }\r\n\r\n            // 双面渲染\r\n            if (materialDef.doubleSided === true) {\r\n\r\n                material.backfaceCulling = false;\r\n\r\n            }\r\n\r\n            // 透明模式\r\n            if (materialDef.alphaMode === 'BLEND') {\r\n\r\n                // material.transparent = true;\r\n                // material.depthWrite = false; todo: 需要测试\r\n\r\n            } else {\r\n\r\n                // 'OPAQUE' 'MASK'\r\n\r\n                // material.transparent = false;\r\n\r\n                // if (materialDef.alphaMode === 'MASK') {\r\n\r\n                // \tif (materialDef.alphaCutoff === undefined) {\r\n\r\n                // \t\t// material.alphaTest = 0.5;\r\n\r\n                // \t} else {\r\n\r\n                // \t\t// material.alphaTest = materialDef.alphaCutoff;\r\n\r\n                // \t}\r\n\r\n                // }\r\n\r\n            }\r\n\r\n            materials.push(material);\r\n\r\n        }\r\n\r\n        return materials;\r\n\r\n    }\r\n\r\n    private async loadTexture(index: number,): Promise<Texture> {\r\n\r\n        const textureDef = this.objectDef.textures[index];\r\n\r\n        if (textureDef.instance) {\r\n\r\n            return textureDef.instance;\r\n\r\n        }\r\n\r\n        const imageDef = this.objectDef.images[textureDef.source];\r\n\r\n        if (!imageDef.instance) {\r\n\r\n            const buffer = this.loadBufferView(imageDef.bufferView)\r\n            const blob = new Blob([buffer], { type: imageDef.mimeType });\r\n\r\n            imageDef.instance = await createImageBitmap(blob, { colorSpaceConversion: 'none' });\r\n\r\n        }\r\n\r\n        const texture = new ImageTexture(imageDef.instance);\r\n        textureDef.instance = texture;\r\n\r\n        const samplerDef = this.objectDef.samplers[textureDef.sampler];\r\n        texture.magFilter = Helper.filters[samplerDef.magFilter] || texture.magFilter;\r\n        texture.minFilter = Helper.filters[samplerDef.minFilter] || texture.minFilter;\r\n        texture.wrapS = Helper.wraps[samplerDef.wrapS] || texture.wrapS;\r\n        texture.wrapT = Helper.wraps[samplerDef.wrapT] || texture.wrapT;\r\n\r\n        return texture;\r\n\r\n    }\r\n\r\n    private loadBufferView(index: number): ArrayBuffer {\r\n\r\n        const bufferViewDef = this.objectDef.bufferViews[index];\r\n\r\n        const byteLength = bufferViewDef.byteLength;\r\n        const byteOffset = bufferViewDef.byteOffset || 0;\r\n\r\n        if (this.bufferData) {\r\n\r\n            return this.bufferData.slice(byteOffset, byteOffset + byteLength);\r\n\r\n        } else {\r\n\r\n            return new ArrayBuffer(byteLength);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GLBLoader {\r\n\r\n    public static async load(url: string): Promise<TRSObject | undefined> {\r\n\r\n        return new GBLParser(url).parse();\r\n\r\n    }\r\n\r\n}","import { Color } from \"../math/Color\";\r\n\r\nexport abstract class Light {\r\n\r\n    public readonly color = new Color(1, 1, 1);\r\n    public intensity = 1;\r\n\r\n    public readonly lightColor = new Color();\r\n\r\n    public update(): void {\r\n\r\n        this.lightColor.copy(this.color);\r\n        this.lightColor.multiplyScalar(this.intensity);\r\n\r\n    }\r\n\r\n}\r\n","import { Light } from \"./Light\";\r\n\r\nexport class AmbientLight extends Light {\r\n\r\n}\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nexport class Plane {\r\n\r\n    public readonly normal = new Vector3(1, 0, 0);\r\n    public constant = 0;\r\n\r\n    public setComponents(x: number, y: number, z: number, w: number): Plane {\r\n\r\n        this.normal.set(x, y, z);\r\n        this.constant = w;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public normalize(): Plane {\r\n\r\n        const inverseNormalLength = 1.0 / this.normal.length();\r\n        this.normal.multiplyScalar(inverseNormalLength);\r\n        this.constant *= inverseNormalLength;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public distanceToPoint(point: Vector3): number {\r\n\r\n        return this.normal.dot(point) + this.constant;\r\n\r\n    }\r\n\r\n}","import { Matrix4 } from \"./Matrix4\";\r\nimport { Plane } from \"./Plane\";\r\nimport { Sphere } from \"./Sphere\";\r\n\r\nexport class Frustum {\r\n\r\n    public readonly planes = [new Plane(), new Plane(), new Plane(), new Plane(), new Plane(), new Plane()];\r\n\r\n    public setFromProjectionMatrix(m: Matrix4): Frustum {\r\n\r\n        /**\r\n         *      m 为包含投影变换的矩阵\r\n         *  \r\n         *      坐标乘以该矩阵后得到 NDC 坐标\r\n         *      如果 NDC 的三个值在 +1 到 -1 范围内\r\n         *      就判定为在视锥内\r\n         * \r\n         *      https://zhuanlan.zhihu.com/p/491340245\r\n         * \r\n         */\r\n\r\n        const planes = this.planes;\r\n        const me = m.elements;\r\n\r\n        const me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];\r\n        const me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];\r\n        const me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];\r\n        const me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];\r\n\r\n        planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\r\n        planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\r\n        planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\r\n        planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\r\n        planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\r\n        planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public intersectsSphere(sphere: Sphere): boolean {\r\n\r\n        const planes = this.planes;\r\n        const center = sphere.center;\r\n        const negRadius = - sphere.radius;\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n\r\n            const distance = planes[i].distanceToPoint(center);\r\n\r\n            if (distance < negRadius) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { Frustum } from \"../math/Frustum\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Sphere } from \"../math/Sphere\";\r\nimport { Mesh } from \"../objects/Mesh\";\r\nimport { TRSObject } from \"../modules/TRSObject\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly matrix4 = new Matrix4();\r\n    public static readonly sphere = new Sphere();\r\n\r\n}\r\n\r\nexport abstract class Camera extends TRSObject {\r\n\r\n    public readonly viewMatrix = new Matrix4();\r\n    public readonly projectionMatrix = new Matrix4();\r\n    public readonly frustum = new Frustum();\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.position.set(0, 1, 0);\r\n\r\n    }\r\n\r\n    public override updateMatrix(): void {\r\n\r\n        super.updateMatrix();\r\n        this.viewMatrix.copy(this.worldMatrix).invert();\r\n\r\n        Helper.matrix4.multiplyMatrices(this.viewMatrix, this.projectionMatrix);\r\n        this.frustum.setFromProjectionMatrix(Helper.matrix4);\r\n\r\n    }\r\n\r\n    public frustumCulling(mesh: Mesh): boolean {\r\n\r\n        Helper.sphere.copy(mesh.geometry.boundingSphere);\r\n        Helper.sphere.applyMatrix4(mesh.worldMatrix);\r\n\r\n        return this.frustum.intersectsSphere(Helper.sphere);\r\n\r\n    }\r\n\r\n    public abstract updateProjectionMatrix(): void;\r\n\r\n}\r\n","import { Camera } from \"./Camera\";\r\n\r\nexport class OrthographicCamera extends Camera {\r\n\r\n    public constructor(\r\n\r\n        public left = -50,\r\n        public right = 50,\r\n        public top = 50,\r\n        public bottom = -50,\r\n        public near = 1,\r\n        public far = 200\r\n\r\n    ) {\r\n\r\n        super();\r\n\r\n        this.updateProjectionMatrix();\r\n\r\n    }\r\n\r\n    public updateProjectionMatrix(): void {\r\n\r\n        const dx = (this.right - this.left) / 2;\r\n        const dy = (this.top - this.bottom) / 2;\r\n        const cx = (this.right + this.left) / 2;\r\n        const cy = (this.top + this.bottom) / 2;\r\n\r\n        const left = cx - dx;\r\n        const right = cx + dx;\r\n        const top = cy + dy;\r\n        const bottom = cy - dy;\r\n\r\n        this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\r\n\r\n    }\r\n\r\n}","import vertexShader from '../renderers/shaders/DepthMaterial.vert';\r\nimport fragmentShader from '../renderers/shaders/DepthMaterial.frag';\r\nimport { Material } from \"./Material\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Scene } from '../objects/Scene';\r\nimport { Mesh } from '../objects/Mesh';\r\nimport { Camera } from '../cameras/Camera';\r\n\r\ntype Uniforms = {\r\n\r\n    opacity: IUniform<number>;\r\n    modelViewMatrix: IUniform<Matrix4>;\r\n    projectionMatrix: IUniform<Matrix4>;\r\n\r\n}\r\n\r\nexport class DepthMaterial extends Material {\r\n\r\n    declare public uniforms: Uniforms;\r\n\r\n    public opacity = 1;\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShader = fragmentShader;\r\n\r\n        this.uniforms.opacity = { value: this.opacity };\r\n        this.uniforms.modelViewMatrix = { value: new Matrix4() };\r\n        this.uniforms.projectionMatrix = { value: new Matrix4() };\r\n\r\n    }\r\n\r\n    public override onBeforRender(scene: Scene, mesh: Mesh, camera: Camera): void {\r\n\r\n        this.uniforms.opacity.value = this.opacity;\r\n\r\n        this.uniforms.modelViewMatrix.value.multiplyMatrices(mesh.worldMatrix, camera.viewMatrix);\r\n\r\n        this.uniforms.projectionMatrix.value.copy(camera.projectionMatrix);\r\n\r\n    }\r\n\r\n}","import { Constants } from \"../Constants\";\r\nimport { Texture } from \"./Texture\";\r\n\r\nexport class DataTexture extends Texture {\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.magFilter = Constants.NEAREST;\r\n        this.minFilter = Constants.NEAREST;\r\n        this.wrapS = Constants.CLAMP_TO_EDGE;\r\n        this.wrapT = Constants.CLAMP_TO_EDGE;\r\n\r\n    }\r\n\r\n}","import { Constants } from \"../Constants\";\r\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\r\nimport { DepthMaterial } from \"../materials/DepthMaterial\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { DataTexture } from \"../textures/DataTexture\";\r\nimport { DirectionalLight } from \"./DirectionalLight\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly matrix4 = new Matrix4();\r\n\r\n}\r\n\r\nexport class Shadow {\r\n\r\n    public readonly size = 1024;\r\n\r\n    public readonly camera = new OrthographicCamera();\r\n    public readonly material = new DepthMaterial();\r\n\r\n    public readonly texture = new DataTexture();\r\n    public readonly matrix = new Matrix4();\r\n\r\n    public updateShadowMatrix(light: DirectionalLight): void {\r\n\r\n        const camera = this.camera;\r\n\r\n        camera.position.copy(light.position);\r\n\r\n        Helper.matrix4.makeLookAt(light.position, light.target);\r\n        Helper.matrix4.extractRotation(camera.rotation);\r\n\r\n        camera.updateMatrix();\r\n\r\n        this.matrix.set(\r\n\r\n            0.5, 0.0, 0.0, 0.0,\r\n            0.0, 0.5, 0.0, 0.0,\r\n            0.0, 0.0, 0.5, 0.0,\r\n            0.5, 0.5, 0.5, 1.0\r\n\r\n        );\r\n\r\n        Helper.matrix4.multiplyMatrices(camera.viewMatrix, camera.projectionMatrix);\r\n\r\n        this.matrix.multiplyMatrices(Helper.matrix4, this.matrix);\r\n\r\n    }\r\n\r\n}","import { Camera } from \"../cameras/Camera\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\nimport { Light } from \"./Light\";\r\nimport { Shadow } from \"./Shadow\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly matrix3 = new Matrix3();\r\n\r\n}\r\n\r\nexport class DirectionalLight extends Light {\r\n\r\n    public readonly position = new Vector3(0, 1, 0);\r\n    public readonly target = new Vector3(0, 0, 0);\r\n\r\n    public readonly shadow = new Shadow();\r\n\r\n    public readonly lightDirection = new Vector3();\r\n\r\n    public override update(camera?: Camera): void {\r\n\r\n        super.update();\r\n\r\n        this.lightDirection.copy(this.position);\r\n        this.lightDirection.sub(this.target);\r\n\r\n        if (camera) {\r\n\r\n            Helper.matrix3.setFromMatrix4(camera.viewMatrix);\r\n            this.lightDirection.applyMatrix3(Helper.matrix3);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import vertexShader from '../renderers/shaders/ImageMaterial.vert';\r\nimport fragmentShader from '../renderers/shaders/ImageMaterial.frag';\r\nimport { ImageTexture } from \"../textures/ImageTexture\";\r\nimport { Material } from \"./Material\";\r\n\r\ntype Uniforms = {\r\n\r\n    map: IUniform<ImageTexture | undefined>;\r\n\r\n}\r\n\r\nexport class ImageMaterial extends Material {\r\n\r\n    declare public uniforms: Uniforms;\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShader = fragmentShader;\r\n\r\n        this.uniforms.map = { value: undefined };\r\n\r\n    }\r\n\r\n    public get map(): ImageTexture | undefined {\r\n\r\n        return this.uniforms.map.value;\r\n\r\n    }\r\n\r\n    public set map(map: ImageTexture) {\r\n\r\n        this.uniforms.map.value = map;\r\n\r\n    }\r\n\r\n}","import vertexShader from '../renderers/shaders/CubeMaterial.vert';\r\nimport fragmentShader from '../renderers/shaders/CubeMaterial.frag';\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { CubeTexture } from \"../textures/CubeTexture\";\r\nimport { Material } from \"./Material\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Mesh } from \"../objects/Mesh\";\r\nimport { Scene } from \"../objects/Scene\";\r\n\r\ntype Uniforms = {\r\n\r\n    cube: IUniform<CubeTexture | undefined>;\r\n    viewMatrix: IUniform<Matrix4>;\r\n    projectionMatrix: IUniform<Matrix4>;\r\n\r\n}\r\n\r\nexport class CubeMaterial extends Material {\r\n\r\n    declare public uniforms: Uniforms;\r\n\r\n    public constructor() {\r\n\r\n        super();\r\n\r\n        this.vertexShader = vertexShader;\r\n        this.fragmentShader = fragmentShader;\r\n\r\n        this.uniforms.cube = { value: undefined };\r\n        this.uniforms.viewMatrix = { value: new Matrix4() };\r\n        this.uniforms.projectionMatrix = { value: new Matrix4() };\r\n\r\n    }\r\n\r\n    public get cube(): CubeTexture | undefined {\r\n\r\n        return this.uniforms.cube.value;\r\n\r\n    }\r\n\r\n    public set cube(cube: CubeTexture) {\r\n\r\n        this.uniforms.cube.value = cube;\r\n\r\n    }\r\n\r\n    public override onBeforRender(scene: Scene, mesh: Mesh, camera: Camera): void {\r\n\r\n        this.uniforms.viewMatrix.value.copy(camera.viewMatrix);\r\n        this.uniforms.projectionMatrix.value.copy(camera.projectionMatrix);\r\n\r\n    }\r\n\r\n}","import { Color } from \"../math/Color\";\r\nimport { Mesh } from \"./Mesh\";\r\nimport { TRSObject } from \"../modules/TRSObject\";\r\nimport { ImageTexture } from \"../textures/ImageTexture\";\r\nimport { CubeTexture } from \"../textures/CubeTexture\";\r\nimport { AmbientLight } from \"../lights/AmbientLight\";\r\nimport { DirectionalLight } from \"../lights/DirectionalLight\";\r\nimport { Attribute } from \"../modules/Attribute\";\r\nimport { Geometry } from \"../modules/Geometry\";\r\nimport { ImageMaterial } from \"../materials/ImageMaterial\";\r\nimport { CubeMaterial } from \"../materials/CubeMaterial\";\r\nimport { Camera } from \"../cameras/Camera\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly COLOR = 0;\r\n    public static readonly IMAGE = 1;\r\n    public static readonly CUBE = 2;\r\n\r\n    public static createImageMesh(): Mesh {\r\n\r\n        const vertices = [-1, 1, -1, -1, 1, 1, -1, -1, 1, -1, 1, 1];\r\n        const uvs = [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1];\r\n\r\n        const geometry = new Geometry();\r\n        geometry.setAttribute('position', Attribute.createF2(vertices));\r\n        geometry.setAttribute('uv', Attribute.createF2(uvs));\r\n\r\n        return new Mesh(geometry, new ImageMaterial());\r\n\r\n    }\r\n\r\n    public static createCubeMesh(): Mesh {\r\n\r\n        const DLF = [-0.5, -0.5, 0.5]; // down left front 1\r\n        const DRF = [0.5, -0.5, 0.5]; // down right front 2\r\n        const URF = [0.5, 0.5, 0.5]; // up right font 3\r\n        const ULF = [-0.5, 0.5, 0.5]; // up left front 4\r\n        const DLB = [-0.5, -0.5, -0.5]; // down left back 5\r\n        const DRB = [0.5, -0.5, -0.5]; // down right back 6\r\n        const URB = [0.5, 0.5, -0.5]; // up right back 7\r\n        const ULB = [-0.5, 0.5, -0.5]; // up left back 8\r\n\r\n        const vertices = [\r\n\r\n            ULF, ULB, URB, ULF, URB, URF, // up\r\n            DLB, DLF, DRF, DLB, DRF, DRB, // down\r\n            DLB, ULB, ULF, DLB, ULF, DLF, // left\r\n            DRF, URF, URB, DRF, URB, DRB, // right\r\n            DLF, ULF, URF, DLF, URF, DRF, // front\r\n            DRB, URB, ULB, DRB, ULB, DLB, // back\r\n\r\n        ].flat();\r\n\r\n        const geometry = new Geometry();\r\n        geometry.setAttribute('position', Attribute.createF3(vertices));\r\n\r\n        return new Mesh(geometry, new CubeMaterial());\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class Scene extends TRSObject {\r\n\r\n    public readonly backgroundColor = new Color(0, 0, 0);\r\n    public readonly backgroundImage = Helper.createImageMesh();\r\n    public readonly backgroundCube = Helper.createCubeMesh();\r\n\r\n    public bgType = Helper.COLOR;\r\n\r\n    public readonly ambientLight = new AmbientLight();\r\n    public readonly directionalLight = new DirectionalLight();\r\n\r\n    public updateLights(camera: Camera): void {\r\n\r\n        this.ambientLight.update();\r\n        this.directionalLight.update(camera);\r\n\r\n    }\r\n\r\n    public setBackgroundColor(color: string): void {\r\n\r\n        this.backgroundColor.setStyle(color);\r\n\r\n        this.bgType = Helper.COLOR;\r\n\r\n    }\r\n\r\n    public setBackgroundImage(texture: ImageTexture): void {\r\n\r\n        const material = this.backgroundImage.material as ImageMaterial;\r\n\r\n        // material.map && material.map.dispose();\r\n        material.map = texture;\r\n\r\n        this.bgType = Helper.IMAGE;\r\n\r\n    }\r\n\r\n    public setBackgroundCube(cubeTexture: CubeTexture): void {\r\n\r\n        const material = this.backgroundCube.material as CubeMaterial;\r\n\r\n        // material.cube && material.cube.dispose();\r\n        material.cube = cubeTexture;\r\n\r\n        this.bgType = Helper.CUBE;\r\n\r\n    }\r\n\r\n    public getBackground(): Color | Mesh {\r\n\r\n        switch (this.bgType) {\r\n\r\n            case Helper.COLOR: return this.backgroundColor;\r\n            case Helper.IMAGE: return this.backgroundImage;\r\n            case Helper.CUBE: return this.backgroundCube;\r\n\r\n        }\r\n\r\n        return this.backgroundColor;\r\n\r\n    }\r\n\r\n}","export class Vector4 {\r\n\r\n    public constructor(\r\n\r\n        public x = 0,\r\n        public y = 0,\r\n        public z = 0,\r\n        public w = 1,\r\n\r\n    ) { }\r\n\r\n    public set(x: number, y: number, z: number, w: number): Vector4 {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(v: Vector4): Vector4 {\r\n\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        this.w = v.w;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public equals(v: Vector4): boolean {\r\n\r\n        return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\r\n\r\n    }\r\n\r\n    public equalsComponent(x: number, y: number, z: number, w: number): boolean {\r\n\r\n        return x === this.x && y === this.y && z === this.z && w === this.w;\r\n\r\n    }\r\n\r\n    public clone(): Vector4 {\r\n\r\n        return new Vector4().copy(this);\r\n\r\n    }\r\n\r\n    public dot(v: Vector4): number {\r\n\r\n        return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n    }\r\n\r\n}","import { Vector4 } from \"../../math/Vector4\";\r\n\r\nexport class WebGLState {\r\n\r\n    public readonly clearColor = new Vector4(0, 0, 0, 0);\r\n    public readonly viewport = new Vector4(0, 0, 0, 0);\r\n\r\n    public program: WebGLProgram | undefined;\r\n    public vao: WebGLVertexArrayObject | undefined;\r\n    public arrayBuffer: WebGLBuffer | undefined;\r\n    public elementArrayBuffer: WebGLBuffer | undefined;\r\n    public frameBuffer: WebGLFramebuffer | null = null;\r\n\r\n    public readonly maxTextures: number;\r\n    private textureUnits = 0;\r\n    private textureUnit = 0;\r\n    private texture2D: WebGLTexture | null = null;\r\n    private textureCubeMap: WebGLTexture | null = null;\r\n\r\n    public frontFace = false;\r\n\r\n    private readonly stateCache = new Map<number, boolean>();\r\n\r\n    public constructor(\r\n\r\n        public readonly gl: WebGL2RenderingContext,\r\n\r\n    ) {\r\n\r\n        this.maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.depthFunc(gl.LEQUAL);\r\n\r\n    }\r\n\r\n    public setClearColor(r: number, g: number, b: number, a = 1): void {\r\n\r\n        if (!this.clearColor.equalsComponent(r, g, b, a)) {\r\n\r\n            this.clearColor.set(r, g, b, a);\r\n            this.gl.clearColor(r, g, b, a);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public setViewport(x: number, y: number, width: number, height: number): void {\r\n\r\n        if (!this.viewport.equalsComponent(x, y, width, height)) {\r\n\r\n            this.viewport.set(x, y, width, height);\r\n            this.gl.viewport(x, y, width, height);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public useProgram(program: WebGLProgram): void {\r\n\r\n        if (this.program !== program) {\r\n\r\n            this.program = program;\r\n            this.gl.useProgram(program);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public resetTextureUnits(): void {\r\n\r\n        this.textureUnits = 0;\r\n\r\n    }\r\n\r\n    public allocateTextureUnits(): number {\r\n\r\n        const textureUnits = this.textureUnits;\r\n\r\n        if (textureUnits >= this.maxTextures) {\r\n\r\n            console.warn(`DXY.WebGLState : 纹理单元超过了最大限制 ${textureUnits} . `);\r\n\r\n        }\r\n\r\n        this.textureUnits++;\r\n\r\n        return textureUnits;\r\n\r\n    }\r\n\r\n    public activeTexture(unit: number): void {\r\n\r\n        if (this.textureUnit !== unit) {\r\n\r\n            this.gl.activeTexture(this.gl.TEXTURE0 + unit);\r\n            this.textureUnit = unit;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public bindTexture(target: number, texture: WebGLTexture | null): void {\r\n\r\n        if (target === this.gl.TEXTURE_2D && this.texture2D !== texture) {\r\n\r\n            this.gl.bindTexture(target, texture);\r\n            this.texture2D = texture;\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (target === this.gl.TEXTURE_CUBE_MAP && this.textureCubeMap !== texture) {\r\n\r\n\r\n            this.gl.bindTexture(target, texture);\r\n            this.textureCubeMap = texture;\r\n\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public bindBuffer(target: number, buffer: WebGLBuffer): void {\r\n\r\n        if (target === this.gl.ARRAY_BUFFER && this.arrayBuffer !== buffer) {\r\n\r\n            this.arrayBuffer = buffer;\r\n            this.gl.bindBuffer(target, buffer);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (target === this.gl.ELEMENT_ARRAY_BUFFER && this.elementArrayBuffer !== buffer) {\r\n\r\n            this.elementArrayBuffer = buffer;\r\n            this.gl.bindBuffer(target, buffer);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public bindVertexArray(vao: WebGLVertexArrayObject): void {\r\n\r\n        if (this.vao !== vao) {\r\n\r\n            this.vao = vao;\r\n            this.gl.bindVertexArray(vao);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public bindFramebuffer(target: number, frameBuffer: WebGLFramebuffer | null): void {\r\n\r\n        if (target === this.gl.FRAMEBUFFER && this.frameBuffer !== frameBuffer) {\r\n\r\n            this.frameBuffer = frameBuffer;\r\n            this.gl.bindFramebuffer(target, frameBuffer);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public setFrontFace(isCW: boolean): void {\r\n\r\n        if (this.frontFace !== isCW) {\r\n\r\n            this.frontFace = isCW;\r\n            this.gl.frontFace(isCW ? this.gl.CW : this.gl.CCW);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public enable(id: number): void {\r\n\r\n        if (!this.stateCache.get(id)) {\r\n\r\n            this.gl.enable(id);\r\n            this.stateCache.set(id, true);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public disable(id: number): void {\r\n\r\n        if (this.stateCache.get(id)) {\r\n\r\n            this.gl.disable(id);\r\n            this.stateCache.set(id, false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public depthTest(isEnable: boolean): void {\r\n\r\n        if (isEnable) {\r\n\r\n            this.enable(this.gl.DEPTH_TEST);\r\n\r\n        } else {\r\n\r\n            this.disable(this.gl.DEPTH_TEST);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public backfaceCulling(isEnable: boolean): void {\r\n\r\n        if (isEnable) {\r\n\r\n            this.enable(this.gl.CULL_FACE);\r\n\r\n        } else {\r\n\r\n            this.disable(this.gl.CULL_FACE);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","export class Vector2 {\r\n\r\n    public constructor(\r\n\r\n        public x = 0,\r\n        public y = 0,\r\n\r\n    ) { }\r\n\r\n    public set(x: number, y: number): Vector2 {\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public copy(v: Vector2): Vector2 {\r\n\r\n        this.y = v.y;\r\n        this.x = v.x;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public setScalar(scalar: number): Vector2 {\r\n\r\n        this.x = scalar;\r\n        this.y = scalar;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public add(v: Vector2): Vector2 {\r\n\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public sub(v: Vector2): Vector2 {\r\n\r\n        return this.subVectors(this, v);\r\n\r\n    }\r\n\r\n    public subVectors(l: Vector2, r: Vector2): Vector2 {\r\n\r\n        this.x = l.x - r.x;\r\n        this.y = l.y - r.y;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public multiplyScalar(scalar: number): Vector2 {\r\n\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public equals(v: Vector2): boolean {\r\n\r\n        return v.x === this.x && v.y === this.y;\r\n\r\n    }\r\n\r\n}","import { Color } from \"../../math/Color\";\r\nimport { Matrix3 } from \"../../math/Matrix3\";\r\nimport { Matrix4 } from \"../../math/Matrix4\";\r\nimport { Vector2 } from \"../../math/Vector2\";\r\nimport { Vector3 } from \"../../math/Vector3\";\r\nimport { Vector4 } from \"../../math/Vector4\";\r\n\r\nabstract class Helper {\r\n\r\n    public static toUniforms(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        uniforms: WebGLUniform[]\r\n\r\n    ): void {\r\n\r\n        Helper.createUniform(gl, info, location, info.name, uniforms);\r\n\r\n    }\r\n\r\n    private static createUniform(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        path: string,\r\n        uniforms: WebGLUniform[],\r\n\r\n    ): void {\r\n\r\n        const dotIndex = path.indexOf('.');\r\n        const braIndex = path.indexOf('[');\r\n\r\n        if (\r\n\r\n            dotIndex !== -1 &&\r\n            braIndex !== -1 &&\r\n            braIndex < dotIndex\r\n\r\n        ) {\r\n\r\n            Helper.createArrayStruct(gl, info, location, path, uniforms);\r\n\r\n        } else if (dotIndex !== -1) {\r\n\r\n            Helper.createStruct(gl, info, location, path, uniforms);\r\n\r\n        } else if (braIndex !== -1) {\r\n\r\n            Helper.createArray(gl, info, location, path, uniforms);\r\n\r\n        } else {\r\n\r\n            Helper.createSingle(gl, info, location, path, uniforms);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private static createSingle(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n        uniforms: WebGLUniform[]\r\n\r\n    ): void {\r\n\r\n        let uniform: WebGLUniform;\r\n\r\n        switch (info.type) {\r\n\r\n            case gl.FLOAT:\r\n\r\n                uniform = new FNumberUniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.INT:\r\n            case gl.BOOL:\r\n\r\n                uniform = new INumberUniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.FLOAT_VEC2:\r\n\r\n                uniform = new FVector2Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.INT_VEC2:\r\n            case gl.BOOL_VEC2:\r\n\r\n                uniform = new IVector2Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.FLOAT_VEC3:\r\n\r\n                uniform = new FVector3Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.INT_VEC3:\r\n            case gl.BOOL_VEC3:\r\n\r\n                uniform = new IVector3Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.FLOAT_VEC4:\r\n\r\n                uniform = new FVector4Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.INT_VEC4:\r\n            case gl.BOOL_VEC4:\r\n\r\n                uniform = new IVector4Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.FLOAT_MAT3:\r\n\r\n                uniform = new Matrix3Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.FLOAT_MAT4:\r\n\r\n                uniform = new Matrix4Uniform(gl, info, location, name);\r\n                break;\r\n\r\n            case gl.SAMPLER_2D:\r\n            case gl.SAMPLER_CUBE:\r\n\r\n                uniform = new TextureUniform(gl, info, location, name);\r\n                break;\r\n\r\n            default:\r\n\r\n                throw new Error(`DXY.WebGLUniform : 不支持 ${info.type} 类型的 uniform . `);\r\n\r\n        }\r\n\r\n        uniforms.push(uniform);\r\n\r\n    }\r\n\r\n    private static createArray(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        path: string,\r\n        uniforms: WebGLUniform[]\r\n\r\n    ): void {\r\n\r\n        const LSBI = path.indexOf('['); // left square bracket index = LSBI = 左 中括弧 的索引值\r\n        path = path.substring(0, LSBI);\r\n\r\n        let uniform: ArrayUniform;\r\n\r\n        switch (info.type) {\r\n\r\n            case gl.FLOAT:\r\n\r\n                uniform = new FArrayUniform(gl, info, location, path);\r\n\r\n                break;\r\n\r\n            case gl.INT:\r\n            case gl.BOOL:\r\n\r\n                uniform = new IArrayUniform(gl, info, location, path);\r\n\r\n                break;\r\n\r\n            default:\r\n\r\n                throw new Error(`DXY.WebGLUniform : 不支持 ${info.type} 类型的 uniform . `);\r\n\r\n        }\r\n\r\n        uniform.size = info.size;\r\n        uniforms.push(uniform);\r\n\r\n    }\r\n\r\n    private static createStruct(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n        uniforms: WebGLUniform[]\r\n\r\n    ): void {\r\n\r\n        const dotIndex = name.indexOf('.');\r\n        const firstName = name.substring(0, dotIndex);\r\n\r\n        let struct = uniforms.find(e => e.name === firstName) as StructUniform;\r\n\r\n        if (!struct) {\r\n\r\n            struct = new StructUniform(gl, info, location, firstName);\r\n            uniforms.push(struct);\r\n\r\n        }\r\n\r\n        name = name.substring(dotIndex + 1);\r\n        Helper.createUniform(gl, info, location, name, struct.uniforms);\r\n\r\n    }\r\n\r\n    private static createArrayStruct(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        path: string,\r\n        uniforms: WebGLUniform[]\r\n\r\n    ): void {\r\n\r\n        const LSBI = path.indexOf('['); // left square bracket index = LSBI = 左 中括弧 的索引值\r\n        const firstName = path.substring(0, LSBI);\r\n\r\n        let structArray = uniforms.find(e => e.name === firstName) as StructArrayUniform;\r\n\r\n        if (!structArray) {\r\n\r\n            structArray = new StructArrayUniform(gl, info, location, firstName);\r\n            uniforms.push(structArray);\r\n\r\n        }\r\n\r\n        const RSBI = path.indexOf(']'); // right square bracket index = RSBI = 右 中括弧 的索引值\r\n        const indexStr = path.substring(LSBI + 1, RSBI);\r\n        const index = Number(indexStr);\r\n\r\n        structArray.size = index + 1;\r\n\r\n        let struct = structArray.uniforms[index]\r\n\r\n        if (!struct) {\r\n\r\n            struct = new StructUniform(gl, info, location, indexStr);\r\n            structArray.uniforms[index] = struct;\r\n\r\n        }\r\n\r\n        path = path.substring(RSBI + 2);\r\n        Helper.createSingle(gl, info, location, path, struct.uniforms);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class WebGLUniform<T = any> {\r\n\r\n    public constructor(\r\n\r\n        public readonly gl: WebGL2RenderingContext,\r\n        public readonly info: WebGLActiveInfo,\r\n        public readonly location: WebGLUniformLocation,\r\n        public readonly name: string,\r\n        public current: T\r\n\r\n    ) { }\r\n\r\n    public set(value: T): void { }\r\n\r\n    public static toUniforms(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        uniforms: WebGLUniform[] = [],\r\n\r\n    ): WebGLUniform[] {\r\n\r\n        Helper.toUniforms(gl, info, location, uniforms);\r\n        return uniforms;\r\n\r\n    }\r\n\r\n}\r\n\r\n//#region array\r\n\r\nabstract class ArrayUniform<T = number[]> extends WebGLUniform<T>{\r\n\r\n    public size = 0;\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, [] as T);\r\n\r\n    }\r\n\r\n    public override set(value: T): void {\r\n\r\n        if (Array.isArray(value) && value.length >= this.size) {\r\n\r\n            this.current = value;\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    protected safeSet(): void { }\r\n\r\n}\r\n\r\nclass FArrayUniform extends ArrayUniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        this.gl.uniform1fv(this.location, this.current);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass IArrayUniform extends ArrayUniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        this.gl.uniform1iv(this.location, this.current);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass StructArrayUniform extends ArrayUniform<object[]> {\r\n\r\n    public uniforms: StructUniform[] = [];\r\n\r\n    public override safeSet(): void {\r\n\r\n        for (let ii = 0, li = this.uniforms.length; ii < li; ii++) {\r\n\r\n            this.uniforms[ii].set(this.current[ii]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region single\r\n\r\nclass FNumberUniform extends WebGLUniform<number>{\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, NaN);\r\n\r\n    }\r\n\r\n    public override set(value: number): void {\r\n\r\n        if (typeof value !== 'number') {\r\n\r\n            value = Number(value);\r\n\r\n        }\r\n\r\n        if (value !== this.current) {\r\n\r\n            this.current = value;\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    protected safeSet(): void {\r\n\r\n        this.gl.uniform1f(this.location, this.current);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass INumberUniform extends FNumberUniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        this.gl.uniform1i(this.location, this.current);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextureUniform extends INumberUniform { }\r\n\r\nclass StructUniform extends WebGLUniform<object> {\r\n\r\n    public uniforms: WebGLUniform[] = [];\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, {});\r\n\r\n    }\r\n\r\n    public override set(valueObject: any): void {\r\n\r\n        this.current = valueObject;\r\n\r\n        for (const uniform of this.uniforms) {\r\n\r\n            if (uniform.name in valueObject) {\r\n\r\n                uniform.set(valueObject[uniform.name]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Vector2\r\n\r\nclass FVector2Uniform extends WebGLUniform<Vector2> {\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, new Vector2(NaN, NaN));\r\n\r\n    }\r\n\r\n    public override set(value: Vector2): void {\r\n\r\n        if (value instanceof Vector2 && !this.current.equals(value)) {\r\n\r\n            this.current.copy(value);\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    protected safeSet(): void {\r\n\r\n        // this.gl.uniform2fv(this.location, array);\r\n        this.gl.uniform2f(this.location, this.current.x, this.current.y);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass IVector2Uniform extends FVector2Uniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        // this.gl.uniform2iv(this.location, array);\r\n        this.gl.uniform2i(this.location, this.current.x, this.current.y);\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Vector3\r\n\r\nclass FVector3Uniform extends WebGLUniform<Vector3> {\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, new Vector3(NaN, NaN, NaN));\r\n\r\n    }\r\n\r\n    public override set(value: Vector3 | Color): void {\r\n\r\n        if (value instanceof Vector3 && !this.current.equals(value)) {\r\n\r\n            this.current.copy(value);\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n        if (\r\n\r\n            value instanceof Color &&\r\n\r\n            (\r\n                value.r !== this.current.x ||\r\n                value.g !== this.current.y ||\r\n                value.b !== this.current.z\r\n            )\r\n\r\n        ) {\r\n\r\n            value.toVector3(this.current);\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    protected safeSet(): void {\r\n\r\n        // this.gl.uniform3fv(this.location, array);\r\n        this.gl.uniform3f(this.location, this.current.x, this.current.y, this.current.z);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass IVector3Uniform extends FVector3Uniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        // this.gl.uniform3iv(this.location, array);\r\n        this.gl.uniform3i(this.location, this.current.x, this.current.y, this.current.z);\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Vector4\r\n\r\nclass FVector4Uniform extends WebGLUniform<Vector4> {\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, new Vector4(NaN, NaN, NaN, NaN));\r\n\r\n    }\r\n\r\n    public override set(value: Vector4): void {\r\n\r\n        if (value instanceof Vector4 && !this.current.equals(value)) {\r\n\r\n            this.current.copy(value);\r\n            this.safeSet();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    protected safeSet(): void {\r\n\r\n        // this.gl.uniform4fv(this.location, array);\r\n        this.gl.uniform4f(this.location, this.current.x, this.current.y, this.current.z, this.current.w);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass IVector4Uniform extends FVector4Uniform {\r\n\r\n    protected override safeSet(): void {\r\n\r\n        // this.gl.uniform4iv(this.location, array);\r\n        this.gl.uniform4i(this.location, this.current.x, this.current.y, this.current.z, this.current.w);\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region matrix\r\n\r\nclass Matrix3Uniform extends WebGLUniform<Matrix3> {\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, new Matrix3([]));\r\n\r\n    }\r\n\r\n    public override set(value: Matrix3): void {\r\n\r\n        if (value instanceof Matrix3 && !this.current.equals(value)) {\r\n\r\n            this.current.copy(value);\r\n            this.gl.uniformMatrix3fv(this.location, false, this.current.elements);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nclass Matrix4Uniform extends WebGLUniform<Matrix4> {\r\n\r\n    public constructor(\r\n\r\n        gl: WebGL2RenderingContext,\r\n        info: WebGLActiveInfo,\r\n        location: WebGLUniformLocation,\r\n        name: string,\r\n\r\n    ) {\r\n\r\n        super(gl, info, location, name, new Matrix4([]));\r\n\r\n    }\r\n\r\n    public override set(value: Matrix4): void {\r\n\r\n        if (value instanceof Matrix4 && !this.current.equals(value)) {\r\n\r\n            this.current.copy(value);\r\n            this.gl.uniformMatrix4fv(this.location, false, this.current.elements);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//#endregion\r\n","import { Texture } from \"./Texture\";\r\n\r\nexport class CubeTexture extends Texture {\r\n\r\n    public constructor(\r\n\r\n        public images?: TexImage[]\r\n\r\n    ) {\r\n\r\n        super();\r\n\r\n    }\r\n\r\n}","import { Attribute } from \"../../modules/Attribute\";\r\n\r\nexport class WebGLAttribute {\r\n\r\n    private readonly enableVAOs = new Set<WebGLVertexArrayObject>();\r\n    private readonly pointerVAOs = new Map<WebGLVertexArrayObject, BufferPointer>();\r\n\r\n    public constructor(\r\n\r\n        private gl: WebGL2RenderingContext,\r\n        private location: number,\r\n        public name: string,\r\n\r\n    ) { }\r\n\r\n    public isEnable(vao: WebGLVertexArrayObject): boolean {\r\n\r\n        return this.enableVAOs.has(vao);\r\n\r\n    }\r\n\r\n    public enable(vao: WebGLVertexArrayObject): void {\r\n\r\n        if (this.isEnable(vao)) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        this.gl.enableVertexAttribArray(this.location);\r\n        this.enableVAOs.add(vao);\r\n\r\n    }\r\n\r\n    public disable(vao: WebGLVertexArrayObject): void {\r\n\r\n        if (!this.isEnable(vao)) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        this.gl.disableVertexAttribArray(this.location);\r\n        this.enableVAOs.delete(vao);\r\n\r\n    }\r\n\r\n    public bind(attribute: Attribute, vao: WebGLVertexArrayObject, buffer: WebGLBuffer): void {\r\n\r\n        const itemSize = attribute.itemSize;\r\n        const dataType = attribute.dataType;\r\n        const normalized = attribute.normalized;\r\n\r\n        let bufferPointer = this.pointerVAOs.get(vao);\r\n\r\n        if (!bufferPointer) {\r\n\r\n            bufferPointer = {};\r\n            this.pointerVAOs.set(vao, bufferPointer);\r\n\r\n            this.enable(vao);\r\n\r\n        }\r\n\r\n        if (\r\n\r\n            bufferPointer.buffer === buffer &&\r\n            bufferPointer.size === itemSize &&\r\n            bufferPointer.type == dataType &&\r\n            bufferPointer.normalized === normalized\r\n\r\n        ) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        bufferPointer.buffer = buffer;\r\n        bufferPointer.size = itemSize;\r\n        bufferPointer.type = dataType;\r\n        bufferPointer.normalized = normalized;\r\n\r\n        this.gl.vertexAttribPointer(\r\n            this.location,\r\n            itemSize,\r\n            dataType,\r\n            normalized,\r\n            0,\r\n            0,\r\n        );\r\n\r\n    }\r\n\r\n}","import { Shadow } from \"../../lights/Shadow\";\r\nimport { Material } from \"../../materials/Material\";\r\nimport { Attribute } from \"../../modules/Attribute\";\r\nimport { Geometry } from \"../../modules/Geometry\";\r\nimport { Mesh } from \"../../objects/Mesh\";\r\nimport { Texture } from \"../../textures/Texture\";\r\nimport { WebGLRenderer } from \"../WebGLRenderer\";\r\nimport { WebGLAttribute } from \"./WebGLAttribute\";\r\nimport { WebGLUniform } from \"./WebGLUniform\";\r\n\r\nclass Helper {\r\n\r\n    private static readonly renderItems: RenderItem[] = [];\r\n\r\n    public static mallocRenderItem(\r\n\r\n        mesh: Mesh,\r\n        geometry: Geometry,\r\n        material: Material,\r\n        group?: RenderGroup\r\n\r\n    ): RenderItem {\r\n\r\n        const item = this.renderItems.shift() || {};\r\n\r\n        item.mesh = mesh;\r\n        item.geometry = geometry;\r\n        item.material = material;\r\n        item.group = group;\r\n\r\n        return item;\r\n\r\n    }\r\n\r\n    public static releaseRenderItem(items: RenderItem[]): void {\r\n\r\n        for (const item of items) {\r\n\r\n            item.mesh = undefined;\r\n            item.geometry = undefined;\r\n            item.material = undefined;\r\n            item.group = undefined;\r\n\r\n            Helper.renderItems.push(item);\r\n\r\n        }\r\n\r\n        items.length = 0;\r\n\r\n    }\r\n\r\n    public static setLineNumber(source: string): string {\r\n\r\n        function fn(lineContent: string, lineIndex: number) {\r\n\r\n            return `${lineIndex + 1}: ${lineContent}`;\r\n\r\n        }\r\n\r\n        return source.split('\\n').map(fn).join('\\n');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class WebGLCache {\r\n\r\n    private readonly frameBuffers = new Map<Shadow, WebGLFramebuffer>();\r\n    private readonly textures = new Map<Texture, WebGLTexture>();\r\n\r\n    private readonly programs = new Map<Function, WebGLProgram>();\r\n    private readonly shaders = new Map<string, WebGLShader>();\r\n\r\n    private readonly attributes = new Map<WebGLProgram, WebGLAttribute[]>();\r\n    private readonly uniforms = new Map<WebGLProgram, WebGLUniform[]>();\r\n\r\n    private readonly buffers = new Map<Attribute, WebGLBuffer>();\r\n    private readonly vaos = new Map<Geometry, WebGLVertexArrayObject>();\r\n\r\n    public constructor(\r\n\r\n        private gl: WebGL2RenderingContext,\r\n\r\n    ) { }\r\n\r\n    public mallocRenderItem(mesh: Mesh, geometry: Geometry, material: Material, group?: RenderGroup): RenderItem {\r\n\r\n        return Helper.mallocRenderItem(mesh, geometry, material, group);\r\n\r\n    }\r\n\r\n    public releaseRenderItem(items: RenderItem[]): void {\r\n\r\n        Helper.releaseRenderItem(items);\r\n\r\n    }\r\n\r\n    public getFrameBuffer(shadow: Shadow): WebGLFramebuffer | undefined {\r\n\r\n        return this.frameBuffers.get(shadow);\r\n\r\n    }\r\n\r\n    public acquireFrameBuffer(shadow: Shadow): WebGLFramebuffer {\r\n\r\n        let frameBuffer = this.frameBuffers.get(shadow);\r\n\r\n        if (!frameBuffer) {\r\n\r\n            frameBuffer = this.gl.createFramebuffer() as WebGLFramebuffer;\r\n            this.frameBuffers.set(shadow, frameBuffer);\r\n\r\n        }\r\n\r\n        return frameBuffer;\r\n\r\n    }\r\n\r\n    public getTexture(texture: Texture): WebGLTexture | undefined {\r\n\r\n        return this.textures.get(texture);\r\n\r\n    }\r\n\r\n    public acquireTexture(texture: Texture): WebGLTexture {\r\n\r\n        let webglTexture = this.textures.get(texture);\r\n\r\n        if (webglTexture === undefined) {\r\n\r\n            webglTexture = this.gl.createTexture() as WebGLTexture;\r\n            this.textures.set(texture, webglTexture);\r\n\r\n        }\r\n\r\n        return webglTexture;\r\n\r\n    }\r\n\r\n    private acquireShader(source: string, type: number): WebGLShader {\r\n\r\n        let shader = this.shaders.get(source);\r\n\r\n        if (!shader) {\r\n\r\n            shader = this.gl.createShader(type) as WebGLShader;\r\n\r\n            this.gl.shaderSource(shader, source);\r\n            this.gl.compileShader(shader);\r\n\r\n            const compiled: boolean = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\r\n\r\n            if (!compiled) {\r\n\r\n                const reminder = 'DXY.WebGLCache : 编译着色器代码错误 .';\r\n                const lastError = this.gl.getShaderInfoLog(shader);\r\n                source = Helper.setLineNumber(source);\r\n\r\n                throw new Error([reminder, lastError, source].join('\\n'));\r\n\r\n            }\r\n\r\n            this.shaders.set(source, shader);\r\n\r\n        }\r\n\r\n        return shader;\r\n\r\n    }\r\n\r\n    public acquireProgram(material: Material): WebGLProgram {\r\n\r\n        const materialClass: Function = material.constructor;\r\n\r\n        let program = this.programs.get(materialClass);\r\n\r\n        if (!program) {\r\n\r\n            const vertexShader = this.acquireShader(material.vertexShader, this.gl.VERTEX_SHADER);\r\n            const fragmentShader = this.acquireShader(material.fragmentShader, this.gl.FRAGMENT_SHADER);\r\n\r\n            program = this.gl.createProgram() as WebGLProgram;\r\n\r\n            this.gl.attachShader(program, vertexShader);\r\n            this.gl.attachShader(program, fragmentShader);\r\n\r\n            this.gl.linkProgram(program);\r\n\r\n            const linked: boolean = this.gl.getProgramParameter(program, this.gl.LINK_STATUS);\r\n\r\n            if (!linked) {\r\n\r\n                const reminder = 'DXY.WebGLCache : 链接着色器程序错误 . ';\r\n                const lastError = this.gl.getProgramInfoLog(program);\r\n\r\n                throw new Error([reminder, lastError].join('\\n'));\r\n\r\n            }\r\n\r\n            this.programs.set(materialClass, program);\r\n\r\n        }\r\n\r\n        return program;\r\n\r\n    }\r\n\r\n    public acquireAttributes(program: WebGLProgram): WebGLAttribute[] {\r\n\r\n        let attributes = this.attributes.get(program);\r\n\r\n        if (!attributes) {\r\n\r\n            attributes = [];\r\n\r\n            const count: number = this.gl.getProgramParameter(program, this.gl.ACTIVE_ATTRIBUTES);\r\n\r\n            for (let ii = 0; ii < count; ii++) {\r\n\r\n                const info = this.gl.getActiveAttrib(program, ii) as WebGLActiveInfo;\r\n                const location: number = this.gl.getAttribLocation(program, info.name);\r\n\r\n                const attribute = new WebGLAttribute(this.gl, location, info.name);\r\n                attributes.push(attribute);\r\n\r\n            }\r\n\r\n            this.attributes.set(program, attributes);\r\n\r\n        }\r\n\r\n        return attributes;\r\n\r\n    }\r\n\r\n    public acquireUniforms(program: WebGLProgram): WebGLUniform[] {\r\n\r\n        let uniforms = this.uniforms.get(program);\r\n\r\n        if (!uniforms) {\r\n\r\n            uniforms = [];\r\n            const count: number = this.gl.getProgramParameter(program, this.gl.ACTIVE_UNIFORMS);\r\n\r\n            for (let ii = 0; ii < count; ii++) {\r\n\r\n                const info = this.gl.getActiveUniform(program, ii) as WebGLActiveInfo;\r\n                const location = this.gl.getUniformLocation(program, info.name) as WebGLUniformLocation;\r\n\r\n                WebGLUniform.toUniforms(this.gl, info, location, uniforms);\r\n\r\n            }\r\n\r\n            this.uniforms.set(program, uniforms);\r\n\r\n        }\r\n\r\n        return uniforms;\r\n\r\n    }\r\n\r\n    public acquireVertexArray(geometry: Geometry): WebGLVertexArrayObject {\r\n\r\n        let vao = this.vaos.get(geometry);\r\n\r\n        if (vao === undefined) {\r\n\r\n            vao = this.gl.createVertexArray() as WebGLVertexArrayObject;\r\n            this.vaos.set(geometry, vao);\r\n\r\n        }\r\n\r\n        return vao;\r\n\r\n    }\r\n\r\n    public getBuffer(attribute: Attribute): WebGLBuffer | undefined {\r\n\r\n        return this.buffers.get(attribute);\r\n\r\n    }\r\n\r\n    public acquireBuffer(attribute: Attribute): WebGLBuffer {\r\n\r\n        let buffer = this.buffers.get(attribute);\r\n\r\n        if (!buffer) {\r\n\r\n            buffer = this.gl.createBuffer() as WebGLBuffer;\r\n            this.buffers.set(attribute, buffer);\r\n\r\n        }\r\n\r\n        return buffer;\r\n\r\n    }\r\n\r\n}","import { Material } from \"../materials/Material\";\r\nimport { Attribute } from \"../modules/Attribute\";\r\nimport { Geometry } from \"../modules/Geometry\";\r\nimport { Camera } from \"../cameras/Camera\";\r\nimport { Mesh } from \"../objects/Mesh\";\r\nimport { Scene } from \"../objects/Scene\";\r\nimport { TRSObject } from \"../modules/TRSObject\";\r\nimport { WebGLState } from \"./webgl/WebGLState\";\r\nimport { TextureUniform, WebGLUniform } from \"./webgl/WebGLUniform\";\r\nimport { Constants } from \"../Constants\";\r\nimport { Texture } from \"../textures/Texture\";\r\nimport { CubeTexture } from \"../textures/CubeTexture\";\r\nimport { WebGLAttribute } from \"./webgl/WebGLAttribute\";\r\nimport { ImageTexture } from \"../textures/ImageTexture\";\r\nimport { Color } from \"../math/Color\";\r\nimport { Shadow } from \"../lights/Shadow\";\r\nimport { DataTexture } from \"../textures/DataTexture\";\r\nimport { WebGLCache } from \"./webgl/WebGLCache\";\r\n\r\nabstract class Helper {\r\n\r\n    private static readonly attributes = {\r\n\r\n        alpha: true,\r\n        depth: true,\r\n        stencil: true,\r\n        antialias: false,\r\n        premultipliedAlpha: true,\r\n        preserveDrawingBuffer: false,\r\n        powerPreference: \"default\",\r\n        failIfMajorPerformanceCaveat: false,\r\n\r\n    }\r\n\r\n    public static getWebGL2(canvas: HTMLCanvasElement): WebGL2RenderingContext {\r\n\r\n        const context = canvas.getContext('webgl2', Helper.attributes);\r\n\r\n        if (!context) {\r\n\r\n            throw new Error('DXY.WebGLRenderer : 当前环境不支持 webgl2 . ');\r\n\r\n        }\r\n\r\n        return context as WebGL2RenderingContext;\r\n\r\n    }\r\n\r\n    public static createTexture(\r\n\r\n        that: WebGLRenderer,\r\n        target: number,\r\n        texture: Texture,\r\n        image: TexImage,\r\n\r\n    ): WebGLTexture {\r\n\r\n        const webglTexture = that.cache.acquireTexture(texture);\r\n\r\n        that.state.bindTexture(target, webglTexture);\r\n\r\n        const levels = 1;\t\t\t\t// 贴图级别\r\n        const format = that.gl.RGBA8;\t// 纹理格式\r\n        const width = image.width;\t\t// 宽度\r\n        const height = image.height;\t// 高度\r\n\r\n        that.gl.texStorage2D(target, levels, format, width, height);\r\n\r\n        texture.needsUpdate = true;\r\n\r\n        return webglTexture;\r\n\r\n    }\r\n\r\n    public static setTextureParameters(\r\n\r\n        that: WebGLRenderer,\r\n        target: number,\r\n        texture: Texture,\r\n\r\n    ): void {\r\n\r\n        that.gl.texParameteri(target, that.gl.TEXTURE_WRAP_S, texture.wrapS);\r\n        that.gl.texParameteri(target, that.gl.TEXTURE_WRAP_T, texture.wrapT);\r\n        that.gl.texParameteri(target, that.gl.TEXTURE_MAG_FILTER, texture.magFilter);\r\n        that.gl.texParameteri(target, that.gl.TEXTURE_MIN_FILTER, texture.minFilter);\r\n\r\n    }\r\n\r\n    public static updateTexture(\r\n\r\n        that: WebGLRenderer,\r\n        target: number,\r\n        image: TexImage,\r\n\r\n    ): void {\r\n\r\n        const level = 0;\t\t\t\t\t    // 贴图级别\r\n        const xoffset = 0;\t\t\t\t\t    // x 偏移\r\n        const yoffset = 0;\t\t\t\t\t    // y 偏移\r\n        const format = that.gl.RGBA;\t\t\t// 纹理格式\r\n        const type = that.gl.UNSIGNED_BYTE;\t\t// 数据类型\r\n\r\n        that.gl.texSubImage2D(target, level, xoffset, yoffset, format, type, image);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class WebGLRenderer {\r\n\r\n    public readonly gl: WebGL2RenderingContext;\r\n    public readonly state: WebGLState;\r\n    public readonly cache: WebGLCache;\r\n\r\n    private readonly renderList: RenderList;\r\n\r\n    public constructor(canvas: HTMLCanvasElement) {\r\n\r\n        this.gl = Helper.getWebGL2(canvas);\r\n        this.state = new WebGLState(this.gl);\r\n        this.cache = new WebGLCache(this.gl);\r\n\r\n        this.renderList = { opaque: [], transparent: [] };\r\n\r\n    }\r\n\r\n    public setSize(width: number, height: number): void {\r\n\r\n        this.state.setViewport(0, 0, width, height);\r\n\r\n    }\r\n\r\n    public render(scene: Scene, camera: Camera): void {\r\n\r\n        scene.updateMatrix();\r\n        camera.updateMatrix();\r\n\r\n        scene.updateLights(camera);\r\n\r\n        this.projectObject(scene, camera);\r\n\r\n        this.renderShadow(scene);\r\n\r\n        this.renderBackground(scene);\r\n\r\n        this.renderObjects(scene, camera);\r\n\r\n        this.cache.releaseRenderItem(this.renderList.opaque);\r\n        this.cache.releaseRenderItem(this.renderList.transparent);\r\n\r\n    }\r\n\r\n    private projectObject(object: TRSObject, camera: Camera): void {\r\n\r\n        if (!object.visible) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (object instanceof Mesh && camera.frustumCulling(object)) {\r\n\r\n            const geometry = object.geometry;\r\n\r\n            if (Array.isArray(object.material)) {\r\n\r\n                const materials = object.material;\r\n                const renderGroups = geometry.groups;\r\n\r\n                for (const group of renderGroups) {\r\n\r\n                    const material = materials[group.materialIndex];\r\n\r\n                    const item = this.cache.mallocRenderItem(object, geometry, material, group);\r\n\r\n                    if (material.transparent) {\r\n\r\n                        this.renderList.transparent.push(item);\r\n\r\n                    } else {\r\n\r\n                        this.renderList.opaque.push(item);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                const item = this.cache.mallocRenderItem(object, geometry, object.material);\r\n\r\n                if (object.material.transparent) {\r\n\r\n                    this.renderList.transparent.push(item);\r\n\r\n                } else {\r\n\r\n                    this.renderList.opaque.push(item);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (const child of object.children) {\r\n\r\n            this.projectObject(child, camera);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private renderShadow(scene: Scene): void {\r\n\r\n        const gl = this.gl;\r\n        const light = scene.directionalLight;\r\n        const shadow = light.shadow;\r\n\r\n        shadow.updateShadowMatrix(light);\r\n\r\n        let frameBuffer = this.cache.getFrameBuffer(shadow);\r\n\r\n        if (!frameBuffer) {\r\n\r\n            frameBuffer = this.cache.acquireFrameBuffer(shadow);\r\n            this.state.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n\r\n            let texture = this.cache.getTexture(shadow.texture);\r\n\r\n            if (!texture) {\r\n\r\n                texture = this.cache.acquireTexture(shadow.texture);\r\n\r\n            }\r\n\r\n            this.state.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n            Helper.setTextureParameters(this, gl.TEXTURE_2D, shadow.texture);\r\n\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.DEPTH_COMPONENT32F, shadow.size, shadow.size, 0, gl.DEPTH_COMPONENT, gl.FLOAT, null);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, texture, 0);\r\n\r\n            // 注意：帧缓冲区和深度纹理绑定之后要随即将深度纹理从纹理单元解绑\r\n            // 目的在于防止后续的渲染操作影响到深度纹理中的内容\r\n            this.state.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        } else {\r\n\r\n            this.state.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n\r\n        }\r\n\r\n        const viewport = this.state.viewport.clone();\r\n\r\n        this.state.setViewport(0, 0, shadow.size, shadow.size);\r\n        gl.clear(gl.DEPTH_BUFFER_BIT);\r\n\r\n        this.renderObjectShadow(scene, shadow, scene);\r\n\r\n        this.state.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        this.state.setViewport(viewport.x, viewport.y, viewport.z, viewport.w);\r\n\r\n    }\r\n\r\n    private renderObjectShadow(scene: Scene, shadow: Shadow, object: TRSObject): void {\r\n\r\n        if (!object.visible) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (object instanceof Mesh && shadow.camera.frustumCulling(object)) {\r\n\r\n            const geometry = object.geometry;\r\n            const material = object.material;\r\n\r\n            if (Array.isArray(material)) {\r\n\r\n                const groups = geometry.groups;\r\n\r\n                for (let k = 0, kl = groups.length; k < kl; k++) {\r\n\r\n                    const group = groups[k];\r\n\r\n                    if (!material[group.materialIndex]) {\r\n\r\n                        continue;\r\n\r\n                    }\r\n\r\n                    this.renderObject(scene, shadow.camera, object, geometry, shadow.material, group);\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                this.renderObject(scene, shadow.camera, object, geometry, shadow.material);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for (const child of object.children) {\r\n\r\n            this.renderObjectShadow(scene, shadow, child);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private renderBackground(scene: Scene): void {\r\n\r\n        const background = scene.getBackground();\r\n\r\n        if (background instanceof Color) {\r\n\r\n            this.state.setClearColor(background.r, background.g, background.b);\r\n\r\n        }\r\n\r\n        this.gl.clear(Constants.CLEAR_MASK);\r\n\r\n        if (background instanceof Mesh) {\r\n\r\n            const item = this.cache.mallocRenderItem(background, background.geometry, background.material as Material);\r\n            this.renderList.opaque.unshift(item);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private renderObjects(scene: Scene, camera: Camera): void {\r\n\r\n        const opaque = this.renderList.opaque;\r\n        const transparent = this.renderList.transparent;\r\n\r\n        for (const renderItem of opaque) {\r\n\r\n            this.renderObject(\r\n\r\n                scene,\r\n                camera,\r\n                renderItem.mesh as Mesh,\r\n                renderItem.geometry as Geometry,\r\n                renderItem.material as Material,\r\n                renderItem.group\r\n\r\n            );\r\n\r\n        }\r\n\r\n        for (const renderItem of transparent) {\r\n\r\n            this.renderObject(\r\n\r\n                scene,\r\n                camera,\r\n                renderItem.mesh as Mesh,\r\n                renderItem.geometry as Geometry,\r\n                renderItem.material as Material,\r\n                renderItem.group\r\n\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private renderObject(\r\n\r\n        scene: Scene,\r\n        camera: Camera,\r\n        mesh: Mesh,\r\n        geometry: Geometry,\r\n        material: Material,\r\n        group?: RenderGroup\r\n\r\n    ): void {\r\n\r\n        material.onBeforRender(scene, mesh, camera);\r\n\r\n        const program = this.cache.acquireProgram(material);\r\n        const attributes = this.cache.acquireAttributes(program);\r\n        const uniforms = this.cache.acquireUniforms(program);\r\n\r\n        this.state.useProgram(program);\r\n\r\n        const frontFaceCW = mesh.worldMatrix.determinant() < 0;\r\n        this.state.setFrontFace(frontFaceCW);\r\n\r\n        this.bindGeometry(geometry, attributes);\r\n        this.applyMaterial(material, uniforms);\r\n        this.renderBuffer(geometry, group);\r\n\r\n    }\r\n\r\n    private bindGeometry(geometry: Geometry, webglAttributes: WebGLAttribute[]): void {\r\n\r\n        const vao = this.cache.acquireVertexArray(geometry);\r\n        this.state.bindVertexArray(vao);\r\n\r\n        for (const webglAttribute of webglAttributes) {\r\n\r\n            const attribute = geometry.getAttribute(webglAttribute.name);\r\n\r\n            if (!attribute) {\r\n\r\n                webglAttribute.disable(vao);\r\n                continue;\r\n\r\n            }\r\n\r\n            const buffer = this.uploadAttributeToGPU(this.gl.ARRAY_BUFFER, attribute);\r\n            webglAttribute.bind(attribute, vao, buffer);\r\n\r\n        }\r\n\r\n        if (geometry.indices !== undefined) {\r\n\r\n            this.uploadAttributeToGPU(this.gl.ELEMENT_ARRAY_BUFFER, geometry.indices);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private uploadAttributeToGPU(target: number, attribute: Attribute): WebGLBuffer {\r\n\r\n        let buffer = this.cache.getBuffer(attribute);\r\n\r\n        if (!buffer) {\r\n\r\n            buffer = this.cache.acquireBuffer(attribute);\r\n\r\n            this.state.bindBuffer(target, buffer);\r\n            this.gl.bufferData(target, attribute.array, this.gl.STATIC_DRAW);\r\n\r\n            attribute.needsUpdate = false;\r\n\r\n        }\r\n\r\n        this.state.bindBuffer(target, buffer);\r\n\r\n        if (attribute.needsUpdate) {\r\n\r\n            this.gl.bufferSubData(target, 0, attribute.array);\r\n\r\n            attribute.needsUpdate = false;\r\n\r\n        }\r\n\r\n        return buffer;\r\n\r\n    }\r\n\r\n    private applyMaterial(material: Material, webglUniforms: WebGLUniform[]): void {\r\n\r\n        this.state.backfaceCulling(material.backfaceCulling);\r\n        this.state.resetTextureUnits();\r\n\r\n        for (const webglUniform of webglUniforms) {\r\n\r\n            const uniform = material.getUniform(webglUniform.name);\r\n\r\n            if (webglUniform instanceof TextureUniform) {\r\n\r\n                const unit = this.state.allocateTextureUnits();\r\n\r\n                if (uniform && uniform.value) {\r\n\r\n                    this.state.activeTexture(unit);\r\n                    this.uploadTextureToGPU(uniform.value);\r\n\r\n                }\r\n\r\n                webglUniform.set(unit);\r\n\r\n            } else if (uniform) {\r\n\r\n                webglUniform.set(uniform.value);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private uploadTextureToGPU(texture: Texture): void {\r\n\r\n        let webglTexture = this.cache.getTexture(texture);\r\n\r\n        if (texture instanceof CubeTexture && texture.images && texture.images.length >= 6) {\r\n\r\n            const target = this.gl.TEXTURE_CUBE_MAP;\r\n\r\n            if (!webglTexture) {\r\n\r\n                webglTexture = Helper.createTexture(this, target, texture, texture.images[0]);\r\n\r\n            }\r\n\r\n            this.state.bindTexture(target, webglTexture);\r\n\r\n            if (texture.needsUpdate) {\r\n\r\n                Helper.setTextureParameters(this, target, texture);\r\n\r\n                const pxTarget = this.gl.TEXTURE_CUBE_MAP_POSITIVE_X;\r\n\r\n                for (let ii = 0; ii < 6; ii++) {\r\n\r\n                    Helper.updateTexture(this, pxTarget + ii, texture.images[ii]);\r\n\r\n                }\r\n\r\n                this.gl.generateMipmap(target);\r\n\r\n                texture.needsUpdate = false;\r\n\r\n            }\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (texture instanceof ImageTexture && texture.image) {\r\n\r\n            const target = this.gl.TEXTURE_2D;\r\n\r\n            if (!webglTexture) {\r\n\r\n                webglTexture = Helper.createTexture(this, target, texture, texture.image);\r\n\r\n            }\r\n\r\n            this.state.bindTexture(target, webglTexture);\r\n\r\n            if (texture.needsUpdate) {\r\n\r\n                Helper.setTextureParameters(this, target, texture);\r\n                Helper.updateTexture(this, target, texture.image);\r\n\r\n                this.gl.generateMipmap(target);\r\n\r\n                texture.needsUpdate = false;\r\n\r\n            }\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        if (texture instanceof DataTexture && webglTexture) {\r\n\r\n            this.state.bindTexture(this.gl.TEXTURE_2D, webglTexture);\r\n            return;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private renderBuffer(geometry: Geometry, group?: RenderGroup): void {\r\n\r\n        let start = -Infinity, count = Infinity;\r\n\r\n        if (group) {\r\n\r\n            start = group.start;\r\n            count = group.count;\r\n\r\n        }\r\n\r\n        if (geometry.indices) {\r\n\r\n            const indices = geometry.indices;\r\n\r\n            start = Math.max(start, 0);\r\n            count = Math.min(count, indices.count);\r\n\r\n            const buffer = this.cache.acquireBuffer(indices);\r\n            this.state.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n\r\n            const offset = start * indices.array.BYTES_PER_ELEMENT;\r\n            this.gl.drawElements(this.gl.TRIANGLES, count, indices.dataType, offset);\r\n\r\n        } else if (geometry.position) {\r\n\r\n            const position = geometry.position;\r\n\r\n            start = Math.max(start, 0);\r\n            count = Math.min(count, position.count);\r\n\r\n            this.gl.drawArrays(this.gl.TRIANGLES, start, count);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { Camera } from \"./Camera\";\r\n\r\nexport class PerspectiveCamera extends Camera {\r\n\r\n    public constructor(\r\n\r\n        public fov = 50,\r\n        public aspect = 1,\r\n        public near = 0.1,\r\n        public far = 2000,\r\n\r\n    ) {\r\n\r\n        super();\r\n\r\n        this.updateProjectionMatrix();\r\n\r\n    }\r\n\r\n    public updateProjectionMatrix(): void {\r\n\r\n        const fovRadian = this.fov / 180 * Math.PI;\r\n\r\n        // 使用 near 的距离计算近平面的 top bottom right left\r\n\r\n        const top = this.near * Math.tan(fovRadian * 0.5);\r\n        const bottom = -top;\r\n        const right = top * this.aspect;\r\n        const left = -right;\r\n\r\n        this.projectionMatrix.makePerspective(left, right, top, bottom, this.near, this.far);\r\n\r\n    }\r\n\r\n}","import { Vector3 } from \"./Vector3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly EPS = 0.000001;\r\n\r\n}\r\n\r\nexport class Spherical {\r\n\r\n    public constructor(\r\n\r\n        public radius = 1,\r\n\r\n        /** 俯仰角 0 指向 +y 方向，增加向 +z 方向，0 - 2PI */\r\n        public phi = 0,\r\n\r\n        /** 方位角 0 指向 +z 方向，增加向 +x 方向，0 - 2PI */\r\n        public theta = 0,\r\n\r\n    ) { }\r\n\r\n    public setFromVector3(v: Vector3): Spherical {\r\n\r\n        this.radius = v.length();\r\n\r\n        if (this.radius === 0) {\r\n\r\n            this.theta = 0;\r\n            this.phi = 0;\r\n\r\n        } else {\r\n\r\n            this.theta = Math.atan2(v.x, v.z);\r\n            this.phi = Math.acos(v.y / this.radius);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public toVector3(target: Vector3): Vector3 {\r\n\r\n        const sinPhiRadius = Math.sin(this.phi) * this.radius;\r\n\r\n        target.x = sinPhiRadius * Math.sin(this.theta);\r\n        target.y = Math.cos(this.phi) * this.radius;\r\n        target.z = sinPhiRadius * Math.cos(this.theta);\r\n\r\n        return target;\r\n\r\n    }\r\n\r\n    public makeSafe(): Spherical {\r\n\r\n        this.phi = Math.max(Helper.EPS, Math.min(this.phi, Math.PI - Helper.EPS));\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}","import { Camera } from \"../cameras/Camera\";\r\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera\";\r\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera\";\r\nimport { Matrix3 } from \"../math/Matrix3\";\r\nimport { Matrix4 } from \"../math/Matrix4\";\r\nimport { Spherical } from \"../math/Spherical\";\r\nimport { Vector2 } from \"../math/Vector2\";\r\nimport { Vector3 } from \"../math/Vector3\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly offset = new Vector3();\r\n    public static readonly spherical = new Spherical();\r\n    public static readonly matrix4 = new Matrix4();\r\n\r\n    public static readonly pixelDelta = new Vector2();\r\n    public static readonly panDelta = new Vector3();\r\n    public static readonly matrix3 = new Matrix3();\r\n\r\n    public static readonly NONE = -1;\r\n    public static readonly PAN = 0;\r\n    public static readonly ZOOM = 1;\r\n    public static readonly ROTATE = 2;\r\n\r\n}\r\n\r\nexport class OrbitControls {\r\n\r\n    public readonly dispose: () => void;\r\n\r\n    public readonly viewPoint = new Vector3();\r\n\r\n    private state = Helper.NONE;\r\n\r\n    private readonly rotateStart = new Vector2();\r\n    private readonly rotateEnd = new Vector2();\r\n    private readonly rotateDelta = new Vector2();\r\n\r\n    private readonly panStart = new Vector2();\r\n    private readonly panEnd = new Vector2();\r\n    private readonly panOffset = new Vector3();\r\n\r\n    private zoom = 1;\r\n\r\n    public constructor(\r\n\r\n        private readonly canvas: HTMLCanvasElement,\r\n        private readonly camera: Camera,\r\n\r\n    ) {\r\n\r\n        const onContextMenu = this.onContextMenu.bind(this);\r\n        const onPointerDown = this.onPointerDown.bind(this);\r\n        const onPointerMove = this.onPointerMove.bind(this);\r\n        const onPointerUp = this.onPointerUp.bind(this);\r\n        const onMouseWheel = this.onMouseWheel.bind(this);\r\n\r\n        canvas.addEventListener('contextmenu', onContextMenu);\r\n        canvas.addEventListener('pointerdown', onPointerDown);\r\n        canvas.addEventListener('pointermove', onPointerMove);\r\n        canvas.addEventListener('pointerup', onPointerUp);\r\n        canvas.addEventListener('pointercancel', onPointerUp);\r\n        canvas.addEventListener('wheel', onMouseWheel, { passive: false });\r\n\r\n        this.dispose = function (): void {\r\n\r\n            canvas.removeEventListener('contextmenu', onContextMenu);\r\n            canvas.removeEventListener('pointerdown', onPointerDown);\r\n            canvas.removeEventListener('pointermove', onPointerMove);\r\n            canvas.removeEventListener('pointerup', onPointerUp);\r\n            canvas.removeEventListener('pointercancel', onPointerUp);\r\n            canvas.removeEventListener('wheel', onMouseWheel);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public update(delta: number): void {\r\n\r\n        const position = this.camera.position;\r\n        const rotation = this.camera.rotation;\r\n\r\n        const offset = Helper.offset;\r\n        const spherical = Helper.spherical;\r\n        const matrix = Helper.matrix4;\r\n\r\n        offset.subVectors(position, this.viewPoint);\r\n        spherical.setFromVector3(offset);\r\n\r\n        // 减号目的在于让物体变换的方向和鼠标移动方向一致\r\n        spherical.theta -= this.rotateDelta.x;\r\n        spherical.phi -= this.rotateDelta.y;\r\n        spherical.makeSafe();\r\n\r\n        spherical.radius *= this.zoom;\r\n        spherical.toVector3(offset);\r\n\r\n        this.viewPoint.sub(this.panOffset);\r\n\r\n        position.copy(this.viewPoint);\r\n        position.add(offset);\r\n\r\n        this.panOffset.setScalar(0);\r\n        this.rotateDelta.setScalar(0);\r\n        this.zoom = 1;\r\n\r\n        matrix.makeLookAt(position, this.viewPoint);\r\n        matrix.extractRotation(rotation);\r\n\r\n    }\r\n\r\n    private rotate(pixelDelta: Vector2): void {\r\n\r\n        // 以 [画布高度 = 2PI] 为基准，计算 xy 移动的等比例弧度\r\n        pixelDelta.multiplyScalar(2 * Math.PI / this.canvas.height);\r\n\r\n        // 累计计算结果\r\n        this.rotateDelta.add(pixelDelta);\r\n\r\n    }\r\n\r\n    private pan(pixelDelta: Vector2): void {\r\n\r\n        const panDelta = Helper.panDelta;\r\n        const matrix3 = Helper.matrix3;\r\n\r\n        let edge = 1;\r\n\r\n        if (this.camera instanceof PerspectiveCamera) {\r\n\r\n            // fov / 2 = 夹角\r\n            // 摄像机 - 视点 = 临边\r\n            // 对边 / 邻边 = tan(夹角)\r\n\r\n            const fov = this.camera.fov;\r\n            const position = this.camera.position;\r\n\r\n            const halfFov = fov / 360 * Math.PI;\r\n            edge = position.distanceTo(this.viewPoint);\r\n            edge *= Math.tan(halfFov);\r\n\r\n            // 以 [画布高度 = fov 垂直距离] 为基准，计算 xy 移动的等比例距离\r\n            pixelDelta.multiplyScalar(2 * edge / this.canvas.height);\r\n\r\n        } else if (this.camera instanceof OrthographicCamera) {\r\n\r\n            const left = this.camera.left;\r\n            const right = this.camera.right;\r\n            const top = this.camera.top;\r\n            const bottom = this.camera.bottom;\r\n\r\n            pixelDelta.x *= (right - left) / this.canvas.width;\r\n            pixelDelta.y *= (top - bottom) / this.canvas.height;\r\n\r\n        }\r\n\r\n        // 从相机空间转换到世界空间，-y 是因为像素 ↓ 为正 webgl ↑ 为正\r\n\r\n        panDelta.set(pixelDelta.x, -pixelDelta.y, 0);\r\n        matrix3.setFromMatrix4(this.camera.worldMatrix);\r\n        panDelta.applyMatrix3(matrix3);\r\n\r\n        this.panOffset.add(panDelta);\r\n\r\n    }\r\n\r\n    private onContextMenu(event: Event): void {\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    private onPointerDown(event: PointerEvent): void {\r\n\r\n        this.canvas.setPointerCapture(event.pointerId);\r\n\r\n        if (event.button === 0) {\r\n\r\n            this.state = Helper.ROTATE;\r\n            this.rotateStart.set(event.clientX, event.clientY);\r\n\r\n        } else if (event.button === 2) {\r\n\r\n            this.state = Helper.PAN;\r\n            this.panStart.set(event.clientX, event.clientY);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private onPointerMove(event: PointerEvent): void {\r\n\r\n        const pixelDelta = Helper.pixelDelta;\r\n\r\n        if (this.state === Helper.ROTATE) {\r\n\r\n            this.rotateEnd.set(event.clientX, event.clientY);\r\n            pixelDelta.subVectors(this.rotateEnd, this.rotateStart);\r\n            this.rotateStart.copy(this.rotateEnd);\r\n\r\n            this.rotate(pixelDelta);\r\n\r\n        }\r\n\r\n        if (this.state === Helper.PAN) {\r\n\r\n            this.panEnd.set(event.clientX, event.clientY);\r\n            pixelDelta.subVectors(this.panEnd, this.panStart);\r\n            this.panStart.copy(this.panEnd);\r\n\r\n            this.pan(pixelDelta);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private onPointerUp(event: PointerEvent): void {\r\n\r\n        this.canvas.releasePointerCapture(event.pointerId);\r\n        this.state = Helper.NONE;\r\n\r\n    }\r\n\r\n    private onMouseWheel(event: WheelEvent): void {\r\n\r\n        event.preventDefault();\r\n\r\n        if (event.deltaY < 0) {\r\n\r\n            this.zoom *= 0.9;\r\n\r\n        }\r\n\r\n        if (event.deltaY > 0) {\r\n\r\n            this.zoom /= 0.9;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","export class ImageLoader {\r\n\r\n    public static load(url: string): Promise<HTMLImageElement> {\r\n\r\n        return new Promise(\r\n\r\n            function (resolve, reject) {\r\n\r\n                const image = document.createElement('img');\r\n\r\n                image.onload = () => {\r\n\r\n                    resolve(image);\r\n\r\n                };\r\n\r\n                image.onerror = () => {\r\n\r\n                    reject();\r\n\r\n                };\r\n\r\n                image.src = url;\r\n\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n}","import { CubeTexture } from \"../textures/CubeTexture\";\r\nimport { ImageTexture } from \"../textures/ImageTexture\";\r\nimport { ImageLoader } from \"./ImageLoader\";\r\n\r\nabstract class Helper {\r\n\r\n    public static readonly cubeSuffixes = ['/px.jpg', '/nx.jpg', '/py.jpg', '/ny.jpg', '/pz.jpg', '/nz.jpg'];\r\n\r\n}\r\n\r\nexport class TextureLoader {\r\n\r\n    public static async loadImageTexture(url: string): Promise<ImageTexture | undefined> {\r\n\r\n        const image = await ImageLoader.load(url);\r\n\r\n        if (image) {\r\n\r\n            return new ImageTexture(image);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static async loadCubeTexture(url: string): Promise<CubeTexture | undefined> {\r\n\r\n        const images: HTMLImageElement[] = [];\r\n\r\n        for (const suffix of Helper.cubeSuffixes) {\r\n\r\n            const image = await ImageLoader.load(url + suffix);\r\n\r\n            if (!image) {\r\n\r\n                return;\r\n\r\n            }\r\n\r\n            images.push(image);\r\n\r\n        }\r\n\r\n        return new CubeTexture(images);\r\n\r\n    }\r\n\r\n}","import { GLBLoader } from \"./loaders/GLBLoader\";\r\nimport { Scene } from \"./objects/Scene\";\r\nimport { TRSObject } from \"./modules/TRSObject\";\r\nimport { WebGLRenderer } from \"./renderers/WebGLRenderer\";\r\nimport { OrbitControls } from \"./controls/OrbitControls\";\r\nimport { PerspectiveCamera } from \"./cameras/PerspectiveCamera\";\r\nimport { TextureLoader } from \"./loaders/TextureLoader\";\r\n\r\nexport default class Dxy {\r\n\r\n\tprivate readonly renderer: WebGLRenderer;\r\n\tprivate readonly scene: Scene;\r\n\r\n\tprivate readonly camera: PerspectiveCamera;\r\n\tprivate readonly orbitControls: OrbitControls;\r\n\r\n\tpublic constructor(\r\n\r\n\t\tpublic readonly canvas = document.createElement('canvas')\r\n\r\n\t) {\r\n\r\n\t\tthis.renderer = new WebGLRenderer(canvas);\r\n\t\tthis.scene = new Scene();\r\n\r\n\t\tthis.camera = new PerspectiveCamera();\r\n\t\tthis.orbitControls = new OrbitControls(canvas, this.camera);\r\n\r\n\t\tthis.resizing(true);\r\n\r\n\t\tthis.startAnimationFrame();\r\n\r\n\t}\r\n\r\n\tprivate startAnimationFrame(): void {\r\n\r\n\t\tlet _elapsed = 0, _delta = 0;\r\n\r\n\t\tconst frameCallback = (_time: number) => {\r\n\r\n\t\t\trequestAnimationFrame(frameCallback);\r\n\r\n\t\t\t_time /= 1000;\r\n\t\t\t_delta = _time - _elapsed;\r\n\t\t\t_elapsed = _time;\r\n\r\n\t\t\tthis.resizing();\r\n\r\n\t\t\tthis.animate(_delta);\r\n\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(frameCallback);\r\n\r\n\t}\r\n\r\n\tprivate resizing(force?: boolean): void {\r\n\r\n\t\tif (\r\n\r\n\t\t\t!force &&\r\n\t\t\tthis.canvas.width === this.canvas.clientWidth &&\r\n\t\t\tthis.canvas.height === this.canvas.clientHeight\r\n\r\n\t\t) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst width = this.canvas.clientWidth;\r\n\t\tconst height = this.canvas.clientHeight\r\n\r\n\t\tthis.canvas.width = width;\r\n\t\tthis.canvas.height = height;\r\n\r\n\t\tthis.camera.aspect = width / height;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.renderer.setSize(width, height);\r\n\r\n\t}\r\n\r\n\tprivate animate(delta: number): void {\r\n\r\n\t\t// 临时\r\n\t\tif (this.scene.children[0]) {\r\n\r\n\t\t\tconst y = this.scene.children[0].rotation.eulerY + Math.PI * delta * 0.25;\r\n\t\t\tthis.scene.children[0].rotation.eulerY = y % (Math.PI * 2);\r\n\r\n\t\t}\r\n\r\n\t\tthis.orbitControls.update(delta);\r\n\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\r\n\t}\r\n\r\n\tpublic async loadModel(parameters: any = {}): Promise<boolean> {\r\n\r\n\t\tlet result = false;\r\n\r\n\t\tconst type: string = parameters.type || 'glb';\r\n\t\tconst url: string = parameters.url;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase 'glb':\r\n\r\n\t\t\t\tconst object = await GLBLoader.load(url);\r\n\r\n\t\t\t\tif (object) {\r\n\r\n\t\t\t\t\tthis.scene.add(object);\r\n\r\n\t\t\t\t\tresult = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'fbx':\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tpublic async setBackground(parameters: any = {}): Promise<void> {\r\n\r\n\t\tconst type: string = parameters.type;\r\n\t\tconst color: string = parameters.color;\r\n\t\tconst image: string = parameters.image;\r\n\t\tconst skybox: string = parameters.skybox;\r\n\r\n\t\tswitch (type) {\r\n\r\n\t\t\tcase 'color':\r\n\r\n\t\t\t\tthis.scene.setBackgroundColor(color);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'image':\r\n\r\n\t\t\t\t// ImageLoader.load(image, (image: HTMLImageElement) => {\r\n\r\n\t\t\t\t// \tthis.scene.setBackgroundImage(image);\r\n\r\n\t\t\t\t// });\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'skybox':\r\n\r\n\t\t\t\tconst cubeTexture = await TextureLoader.loadCubeTexture(skybox);\r\n\r\n\t\t\t\tif (cubeTexture) {\r\n\r\n\t\t\t\t\tthis.scene.setBackgroundCube(cubeTexture);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"],"names":["Helper","vertexShader","fragmentShader"],"mappings":"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AAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAEnF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAEnF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACtF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,C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"}